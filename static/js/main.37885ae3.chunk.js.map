{"version":3,"sources":["Mosaic.module.css","PopUp.module.css","index.module.css","calLiWorker.js","greyScaleMaker.js","lib/MyCanvas.js","Mosaic.js","PopUp.js","index.js"],"names":["module","exports","code","onmessage","e","imgData","data","imgidx","pixels","lightness","i","length","parseInt","cnt","postMessage","toString","substring","indexOf","lastIndexOf","blob","Blob","type","worker_script","URL","createObjectURL","isFull","nOfSameLightnessImgs","Uint8ClampedArray","li","res","d","copy","ImageData","width","height","dataCopy","k","set","push","MyCanvas","options","default_args","index","this","vars","consts","simulate","render","init","_delete","delete","simulResult","_prevSResult","lastReq","canAnimRun","canRender","_canvas","_init","renderFrame","canvas","context","getContext","timestamp","requestAnimationFrame","bind","clearRect","_simulate","cancelAnimationFrame","param","console","assert","beginPath","moveTo","forEach","element","lineTo","closePath","style","fillStyle","fill","rgb","v","Math","max","c","min","h","round","hsv","f","n","array","image","sx","sy","sw","sh","dx","dy","dw","dh","abs","x1","x2","y1","y2","w_ratio","h_ratio","MosaicSize","canvasSize","MosaicInfo","bannedList","Set","imageIdx","Mosaic","React","memo","props","canvasRef","useRef","originCanvasRef","tmpCanvasRef","bgImgRef","bgImg","images","value","preventDefault","myc","setPos","pos","zoom","posX","posY","ratioX","ratioY","zoomScale","prevSize","originSize","maxZoomScale","viewportSize","preva","prevb","cura","curb","getClampVal","posToIdx","current","clientWidth","floor","click","x","curHoveredPos","y","originCanvas","numOfColPixel","numOfRowPixel","mosaicInfo","toCanvasCoeff","idxc","idxr","dc","dr","curMosaicSize","popUpSize","popUpPos","offsetLeft","offsetTop","imageInfo","popUp","imageId","name","thumbnail","thumbnailUrl","webSearchUrl","emp","move","isInit","canMove","ratioW","ratioH","radioOfPic","renderedPixel","picPos","zeroX","zeroY","viewportSizeForPic","hoverLineSize","hoveredPos","slice","drawImage","getSafeRect","stroke","globalAlpha","renderLightness","pos_lightness","curImage","cur","imgs","imgs_lightness","candis","Array","has","rd","random","j","add","putImageData","map","imgInfo","base","renderLightnessCnt","strokeStyle","w","renderedW","renderedH","tmpctx","imageData","getImageData","curPixel","fillRect","onloadhandler","target","imgDatas","idx","window","Worker","calLiWorker","CalLiWorker","greyScaleMaker","GreyScaleMaker","isComplete","img2greyScale","lightnessMul","lightnessAdd","tmpimg","onload","Image","crossOrigin","addEventListener","once","src","useEffect","isMoved","prev","onmove","touches","pageX","pageY","movementX","movementY","pointerId","ondown","clientX","clientY","onup","splice","className","styles","dispNone","ref","onLoad","renderPicture","animStart","width100","onClick","onWheel","deltaY","onMouseMove","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","PopUp","position","left","top","line","hide","Main","state","popUpInfo","setState","container","Component","App","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.37885ae3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"width100\":\"Mosaic_width100__2jt-x\",\"widthS\":\"Mosaic_widthS__3p1_J\",\"dispNone\":\"Mosaic_dispNone__3qLUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PopUp_block__3mkAn\",\"dispNone\":\"PopUp_dispNone__1foPo\",\"line\":\"PopUp_line__1o5o_\",\"width100\":\"PopUp_width100__3vPiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__Xu5Sk\",\"linkActive\":\"src_linkActive__2Jb0z\"};","const workercode = () => {\r\n    onmessage = function(e) {\r\n        let imgData = e.data[0];\r\n        let imgidx = e.data[1];\r\n        let pixels = imgData.data;\r\n        let lightness = 0;\r\n        for (var i = 0; i < pixels.length; i += 4) {\r\n            lightness += parseInt((3*pixels[i] + 4*pixels[i + 1] + pixels[i + 2]) >>> 3);\r\n        }\r\n        let cnt = imgData.data.length/4;\r\n        lightness = parseInt(lightness / cnt);\r\n        postMessage([lightness, imgData,imgidx]);\r\n    }\r\n};\r\n\r\nlet code = workercode.toString();\r\ncode = code.substring(code.indexOf(\"{\")+1, code.lastIndexOf(\"}\"));\r\n\r\nconst blob = new Blob([code], {type: \"application/javascript\"});\r\nconst worker_script = URL.createObjectURL(blob);\r\n\r\nmodule.exports = worker_script;","const workercode = () => {\r\n    onmessage = function(e) {\r\n        let isFull = e.data.isFull;\r\n        let lightness = e.data.lightness;\r\n        let imgData = e.data.imgData;\r\n        let imgidx = e.data.imgidx;\r\n        let nOfSameLightnessImgs = e.data.nOfSameLightnessImgs;\r\n        let pixels = new Uint8ClampedArray(imgData.data);\r\n        for (let i = 0; i < pixels.length; i += 4) {\r\n            let li = parseInt((3*pixels[i] + 4*pixels[i + 1] + pixels[i + 2]) >>> 3);\r\n            pixels[i] = li;\r\n            pixels[i + 1] = li;\r\n            pixels[i + 2] = li;\r\n        }\r\n        let res = [];\r\n        for(let d = -20; d <= 10 ;d++){\r\n            if(lightness + d >= 5 && lightness + d <= 245 \r\n                && isFull[lightness + d] <= nOfSameLightnessImgs) {\r\n                let copy = new ImageData(imgData.width,imgData.height);\r\n                let dataCopy = new Uint8ClampedArray(pixels);\r\n                if(d < 0){\r\n                    let k = (lightness + d) / lightness;\r\n                    for (let i = 0; i < dataCopy.length; i += 4) {\r\n                        dataCopy[i] *= k;\r\n                        dataCopy[i + 1] *= k;\r\n                        dataCopy[i + 2] *= k;\r\n                    }\r\n                }else if (d > 0){\r\n                    for (let i = 0; i < dataCopy.length; i += 4) {\r\n                        dataCopy[i] += d;\r\n                        dataCopy[i + 1] += d;\r\n                        dataCopy[i + 2] += d;\r\n                    }\r\n                }\r\n                copy.data.set(dataCopy);\r\n                res.push([lightness+d,copy,imgidx]);\r\n            }\r\n        }\r\n        postMessage(res);\r\n    }\r\n};\r\n\r\nlet code = workercode.toString();\r\ncode = code.substring(code.indexOf(\"{\")+1, code.lastIndexOf(\"}\"));\r\n\r\nconst blob = new Blob([code], {type: \"application/javascript\"});\r\nconst worker_script = URL.createObjectURL(blob);\r\n\r\nmodule.exports = worker_script;","export class MyCanvas{\r\n  constructor(options){    \r\n    var default_args = {\r\n      'vars'       :   null,\r\n      'consts'     :   null,\r\n      'simulate'   :   ()=>{},\r\n      'render'     :   ()=>{},\r\n      'init'       :   ()=>{},\r\n      'delete'     :   ()=>{},\r\n    }\r\n    for (var index in default_args) {\r\n        if (typeof options[index] == \"undefined\") options[index] = default_args[index];\r\n    }\r\n    this.vars = options.vars;\r\n    this.consts = options.consts;\r\n    this.simulate = options.simulate;\r\n    this.render = options.render;\r\n    this.init = options.init;\r\n    this._delete = options.delete;\r\n    this.simulResult = null;\r\n    this._prevSResult = null;\r\n    this.lastReq = null;\r\n    this.canAnimRun = true;\r\n    this.canRender = true;\r\n  }\r\n  \r\n  animStart(_canvas){\r\n    this._init(_canvas);\r\n    this.renderFrame();\r\n  }\r\n  _init(_canvas){\r\n    this.canvas = _canvas;\r\n    this.context = _canvas.getContext('2d');\r\n    this.init();\r\n  }\r\n  renderFrame(timestamp){   \r\n    this.lastReq = requestAnimationFrame(this.renderFrame.bind(this));\r\n    if(!this.canAnimRun) return;    \r\n    this.context.clearRect(0, 0, this.canvas.width,  this.canvas.height);\r\n    this._simulate(timestamp);\r\n    if(!this.canRender) return;\r\n    this.render(timestamp);\r\n    \r\n  }\r\n  renderPicture(_canvas){\r\n    this._init(_canvas);\r\n    if(!this.canRender) return;\r\n    this.context.clearRect(0, 0, this.canvas.width,  this.canvas.height);\r\n    this.render();\r\n  }\r\n  _simulate(timestamp){\r\n    this.simulate(timestamp);\r\n  }\r\n  delete(){\r\n    cancelAnimationFrame(this.lastReq);\r\n    this._delete();\r\n  }\r\n  drawPolygon(param){\r\n    console.assert(param && param.length > 2, \"다각형을 구성하는 점이 너무 작습니다.\");\r\n    this.context.beginPath();\r\n    this.context.moveTo(param[0][0], param[0][1]);\r\n    param.forEach(element => {\r\n      this.context.lineTo(element[0],element[1]);\r\n    });\r\n    this.context.closePath();\r\n  }\r\n  fill(style){\r\n    this.context.fillStyle = style;\r\n    this.context.fill();\r\n  }\r\n  static rgb2hsv(rgb) {\r\n    let v = Math.max(rgb[0],rgb[1],rgb[2]), c = v-Math.min(rgb[0],rgb[1],rgb[2]);\r\n    let h = c && ((v===rgb[0]) ? (rgb[1]-rgb[2])/c : ((v===rgb[1]) ? 2+(rgb[2]-rgb[0])/c : 4+(rgb[0]-rgb[1])/c)); \r\n    return [Math.round(60*(h<0?h+6:h)), v&&c/v, v];\r\n  }\r\n  static hsv2rgb(hsv){                            \r\n    let f = (n,k=(n+hsv[0]/60)%6) => hsv[2] - hsv[2]*hsv[1]*Math.max( Math.min(k,4-k,1), 0);     \r\n    return [f(5),f(3),f(1)];       \r\n  }\r\n  static getGreyScale(imgData){\r\n    let array = imgData;\r\n    if(array.data) array = array.data;\r\n    return parseInt((3*array[0] + 4*array[1] + array[2]) >>> 3);\r\n  }\r\n  static lightnessMul(imgData,k){\r\n    let res = new ImageData(imgData.width,imgData.height);\r\n    var pixels = new Uint8ClampedArray(imgData.data);\r\n    for (var i = 0; i < pixels.length; i += 4) {\r\n      pixels[i] *= k;\r\n      pixels[i + 1] *= k;\r\n      pixels[i + 2] *= k;\r\n    }\r\n    res.data.set(pixels);\r\n    return res;\r\n  }\r\n  static lightnessAdd(imgData,k){\r\n    let res = new ImageData(imgData.width,imgData.height);\r\n    var pixels = new Uint8ClampedArray(imgData.data);\r\n    for (var i = 0; i < pixels.length; i += 4) {\r\n      pixels[i] += k;\r\n      pixels[i + 1] += k;\r\n      pixels[i + 2] += k;\r\n    }\r\n    res.data.set(pixels);\r\n    return res;\r\n  }\r\n  static img2greyScale(imgData){\r\n    let pixels = imgData.data;\r\n    for (var i = 0; i < pixels.length; i += 4) {\r\n        let lightness = parseInt((3*pixels[i] + 4*pixels[i + 1] + pixels[i + 2]) >>> 3);\r\n        pixels[i] = lightness;\r\n        pixels[i + 1] = lightness;\r\n        pixels[i + 2] = lightness;\r\n    }\r\n    return imgData;\r\n  }\r\n\r\n  static getSafeRect( image, sx, sy, sw, sh, dx, dy, dw, dh ) {  \r\n    const { width, height } = image;    \r\n    if( sw < 0 ) {\r\n      sx += sw;\r\n      sw = Math.abs( sw );\r\n    }\r\n    if( sh < 0 ) {\r\n      sy += sh;\r\n      sh = Math.abs( sh );\r\n    }\r\n    if( dw < 0 ) {\r\n      dx += dw;\r\n      dw = Math.abs( dw );\r\n    }\r\n    if( dh < 0 ) {\r\n      dy += dh;\r\n      dh = Math.abs( dh );\r\n    }\r\n    const x1 = Math.max( sx, 0 );\r\n    const x2 = Math.min( sx + sw, width );\r\n    const y1 = Math.max( sy, 0 );\r\n    const y2 = Math.min( sy + sh, height );\r\n    const w_ratio = dw / sw;\r\n    const h_ratio = dh / sh;\r\n\r\n    return [\r\n      image,\r\n      x1,\r\n      y1,\r\n      x2 - x1,\r\n      y2 - y1,\r\n      sx < 0 ? dx - (sx * w_ratio) : dx,\r\n      sy < 0 ? dy - (sy * h_ratio) : dy,\r\n      (x2 - x1) * w_ratio,\r\n      (y2 - y1) * h_ratio\r\n    ];\r\n  }\r\n}  ","import React, { useEffect,useRef, useState } from 'react';\r\nimport { MyCanvas } from './lib/MyCanvas';\r\nimport CalLiWorker from \"./calLiWorker\";\r\nimport GreyScaleMaker from \"./greyScaleMaker\";\r\nimport styles from './Mosaic.module.css';\r\nimport data from './data.json';\r\n\r\nconst MosaicSize = 30;\r\nconst NumOfPixel = 50;\r\nconst canvasSize = 800;\r\nclass MosaicInfo{\r\n    constructor(){   \r\n        this.bannedList = new Set();\r\n        this.imageIdx = null;\r\n    }\r\n};\r\nconst Mosaic = React.memo((props)=> { \r\n    let canvasRef = useRef(null);\r\n    let originCanvasRef = useRef(null);\r\n    let tmpCanvasRef = useRef(null);\r\n    let bgImgRef = useRef(null);\r\n    let bgImg = {};\r\n    let images = [];\r\n    /*fetch(\"http://52.231.32.202/images\", {\r\n          method: 'GET',\r\n        }).then(res => res.json())\r\n        .then(json =>{\r\n            images = json.value;\r\n            bgImgRef.current.crossOrigin = \"Anonymous\";\r\n            bgImgRef.current.src = images[0].thumbnailUrl;\r\n        });*/\r\n\r\n    images = data.value;\r\n    const preventDefault = e => e.preventDefault();\r\n    let myc = new MyCanvas({\r\n        consts :{\r\n            setPos : (dx,dy)=>{\r\n                myc.vars.pos[0] += dx;\r\n                myc.vars.pos[1] += dy;\r\n                myc.vars.pos[2] += dx;\r\n                myc.vars.pos[3] += dy; \r\n            },\r\n            zoom : (posX,posY,d)=>{\r\n                let ratioX = posX/canvasSize;\r\n                let ratioY = posY/canvasSize;\r\n                d *= myc.vars.zoomScale; \r\n                let prevSize = myc.vars.originSize / myc.vars.zoomScale;  \r\n                myc.vars.zoomScale = Math.min(myc.vars.maxZoomScale,Math.max(1,myc.vars.zoomScale+d));      \r\n                let viewportSize = myc.vars.originSize / myc.vars.zoomScale;  \r\n\r\n                let preva = prevSize * ratioX;\r\n                let prevb = prevSize * ratioY; \r\n                let cura = viewportSize * ratioX;   \r\n                let curb = viewportSize * ratioY;\r\n                let [dx,dy]= myc.consts.getClampVal(cura - preva,curb - prevb);\r\n\r\n                myc.consts.setPos(dx,dy); \r\n            },\r\n            posToIdx : (posX,posY)=>{\r\n                let ratioX = posX/canvasRef.current.clientWidth;\r\n                let ratioY = posY/canvasRef.current.clientWidth;\r\n                let viewportSize = myc.vars.originSize / myc.vars.zoomScale;  \r\n                let dx = viewportSize * ratioX;   \r\n                let dy = viewportSize * ratioY;\r\n\r\n                let idxC = Math.floor( (-myc.vars.pos[0] + dx)/MosaicSize);\r\n                let idxR = Math.floor( (-myc.vars.pos[1] + dy)/MosaicSize);\r\n                return [idxC,idxR];\r\n            },\r\n            click : (posX,posY)=>{\r\n                let x = myc.vars.curHoveredPos[0];\r\n                let y = myc.vars.curHoveredPos[1];\r\n                if(0 <= x && x < originCanvas.vars.numOfColPixel && 0 <= y && y < originCanvas.vars.numOfRowPixel\r\n                    && originCanvas.vars.mosaicInfo[y][x].imageIdx !== null){\r\n                    //현재 마우스 포인터가 캔버스 기준으로\r\n                    //현재 인덱스는 캔버스 기준으로 바꾸면 좌상단이 몇몇인가?\r\n                    let viewportSize = myc.vars.originSize / myc.vars.zoomScale;  \r\n                    let toCanvasCoeff = canvasRef.current.clientWidth / viewportSize;\r\n                    let idxc = x*MosaicSize*toCanvasCoeff;\r\n                    let idxr = y*MosaicSize*toCanvasCoeff;\r\n                    let zeroc = myc.vars.pos[0] *toCanvasCoeff;\r\n                    let zeror = myc.vars.pos[1] *toCanvasCoeff;\r\n                    idxc += zeroc;\r\n                    idxr += zeror;\r\n\r\n                    //좌상단과 현재 마우스 포인터를 비교해서 모자이크에서 얼마만큼 갔고 얼마만큼 남았나 \r\n                    let dc = posX - idxc; \r\n                    let dr = posY - idxr;\r\n                    let curMosaicSize = MosaicSize*toCanvasCoeff;\r\n\r\n\r\n                    let popUpSize = Math.floor(canvasRef.current.clientWidth/2 - curMosaicSize);\r\n                    let popUpPos = [0,0];\r\n                    if(posX > canvasRef.current.clientWidth/2) popUpPos[0] = posX + (curMosaicSize - dc) - popUpSize;\r\n                    else popUpPos[0] = (posX - dc);\r\n                    if(posY > canvasRef.current.clientWidth/2) popUpPos[1] = posY + (curMosaicSize - dr) - popUpSize;\r\n                    else popUpPos[1] = (posY - dr);\r\n                    popUpPos[0] = Math.min(canvasRef.current.clientWidth - popUpSize, Math.max(0,popUpPos[0])) + canvasRef.current.offsetLeft;\r\n                    popUpPos[1] = Math.min(canvasRef.current.clientWidth - popUpSize, Math.max(0,popUpPos[1])) + canvasRef.current.offsetTop;\r\n                    let imageIdx = originCanvas.vars.mosaicInfo[y][x].imageIdx;\r\n                    let imageInfo = images[Math.floor(imageIdx)];\r\n                    props.popUp({\r\n                        popUpSize : popUpSize,\r\n                        popUpPos : popUpPos,\r\n                        imageId : imageInfo.imageId,\r\n                        name: imageInfo.name,\r\n                        thumbnail: imageInfo.thumbnail,\r\n                        thumbnailUrl: imageInfo.thumbnailUrl,\r\n                        webSearchUrl: imageInfo.webSearchUrl,\r\n                    });                  \r\n                }else{\r\n                    props.popUp(null);\r\n                }                \r\n            },            \r\n            emp: (posX,posY)=>{\r\n                let pos = myc.consts.posToIdx(posX,posY);\r\n                if(0 <= pos[0] && pos[0] < originCanvas.vars.numOfColPixel\r\n                    && 0 <= pos[1] && pos[1] < originCanvas.vars.numOfRowPixel){\r\n                        myc.vars.curHoveredPos = pos;\r\n                }else{\r\n                    myc.vars.curHoveredPos = [-100,-100];\r\n                }\r\n                \r\n            },\r\n            move : (dx,dy)=>{\r\n                if(!myc.vars.isInit || !myc.vars.canMove) return;\r\n                dx = dx*10/myc.vars.zoomScale;\r\n                dy = dy*10/myc.vars.zoomScale;\r\n                [dx,dy] = myc.consts.getClampVal(dx,dy);\r\n\r\n                myc.consts.setPos(dx,dy);\r\n            },\r\n            getClampVal:(x,y)=>{\r\n                let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n                //원본크기가 뷰포트사이즈보다 같거나 작을때\r\n                if(viewportSize >= myc.vars.originSize*myc.vars.ratioW){\r\n                    x = Math.max(-myc.vars.pos[0],x);//최소를 정함\r\n                    x = Math.min(viewportSize - myc.vars.pos[2],x);//최대를 정함\r\n                }else{\r\n                    x = Math.max(viewportSize - myc.vars.pos[2],x);//최소를 정함\r\n                    x = Math.min(-myc.vars.pos[0],x);//최대를 정함\r\n                }\r\n                if(viewportSize >= myc.vars.originSize*myc.vars.ratioH){\r\n                    y = Math.max(-myc.vars.pos[1],y);\r\n                    y = Math.min(viewportSize - myc.vars.pos[3],y);\r\n                }else{\r\n                    y = Math.max(viewportSize - myc.vars.pos[3],y);\r\n                    y = Math.min(-myc.vars.pos[1],y);\r\n                } \r\n                return [x,y];\r\n            }\r\n        },\r\n        vars : {\r\n            zoomScale : 1,\r\n            pos : [0,0,0,0],\r\n            curHoveredPos : [-10,-10],\r\n            isInit : false,\r\n            maxZoomScale : 1,\r\n            originSize : 1000,\r\n            canMove :false,\r\n            ratioW : 1,\r\n            ratioH : 1,\r\n            radioOfPic : 1,\r\n        },\r\n        init : ()=>{   \r\n            myc.vars.originSize = originCanvas.canvas.width > originCanvas.canvas.height ? originCanvas.canvas.width : originCanvas.canvas.height;\r\n            myc.vars.ratioW = originCanvas.canvas.width / myc.vars.originSize;\r\n            myc.vars.ratioH = originCanvas.canvas.height / myc.vars.originSize;\r\n            myc.vars.pos[0] = myc.vars.originSize* (1-myc.vars.ratioW)/2;\r\n            myc.vars.pos[1] = myc.vars.originSize* (1-myc.vars.ratioH)/2;\r\n            myc.vars.pos[2] = myc.vars.pos[0] + myc.vars.originSize*myc.vars.ratioW;\r\n            myc.vars.pos[3] = myc.vars.pos[1] + myc.vars.originSize*myc.vars.ratioH;\r\n            myc.vars.maxZoomScale = myc.vars.originSize*(100/MosaicSize)/canvasSize;\r\n            myc.vars.radioOfPic = bgImg.renderedPixel/myc.vars.originSize;\r\n            let d = myc.vars.pos[0]+myc.vars.pos[1];\r\n            if(d > canvasSize/8){\r\n                myc.consts.zoom(canvasSize/2,canvasSize/2,myc.vars.originSize/(myc.vars.originSize-1.7*d)-1);\r\n            }\r\n\r\n            myc.vars.isInit = true;\r\n\r\n        },\r\n        simulate : ()=>{\r\n            let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n            let picPos = [-bgImg.zeroX+myc.vars.pos[0]*myc.vars.radioOfPic, -bgImg.zeroY+myc.vars.pos[1]*myc.vars.radioOfPic];\r\n            let viewportSizeForPic = bgImg.renderedPixel /myc.vars.zoomScale;\r\n            let hoverLineSize = MosaicSize * canvasSize/viewportSize;\r\n            let hoveredPos = myc.vars.curHoveredPos.slice();\r\n            hoveredPos[0] = hoveredPos[0]*MosaicSize + myc.vars.pos[0];\r\n            hoveredPos[1] = hoveredPos[1]*MosaicSize + myc.vars.pos[1];\r\n            hoveredPos[0] *= canvasSize/viewportSize;\r\n            hoveredPos[1] *= canvasSize/viewportSize;\r\n            myc.simulResult = {\r\n                viewportSize : viewportSize,                \r\n                pos : myc.vars.pos,\r\n                picPos : picPos,\r\n                viewportSizeForPic : viewportSizeForPic,\r\n                hoveredPos : hoveredPos,\r\n                hoverLineSize : hoverLineSize,\r\n            };\r\n        },\r\n        render : ()=>{\r\n            //그리기\r\n            let res = myc.simulResult;\r\n            myc.context.drawImage(...MyCanvas.getSafeRect(originCanvas.canvas,\r\n                -res.pos[0], -res.pos[1], res.viewportSize, res.viewportSize,\r\n                0, 0, canvasSize, canvasSize));\r\n            myc.context.beginPath();\r\n            myc.context.lineTo(res.hoveredPos[0],res.hoveredPos[1]);\r\n            myc.context.lineTo(res.hoveredPos[0]+res.hoverLineSize,res.hoveredPos[1]);\r\n            myc.context.lineTo(res.hoveredPos[0]+res.hoverLineSize,res.hoveredPos[1]+res.hoverLineSize);\r\n            myc.context.lineTo(res.hoveredPos[0],res.hoveredPos[1]+res.hoverLineSize);\r\n            myc.context.closePath();\r\n            myc.context.stroke();\r\n\r\n            myc.context.globalAlpha = 0.5;\r\n            myc.context.drawImage(...MyCanvas.getSafeRect(bgImgRef.current,\r\n                -res.picPos[0], -res.picPos[1], res.viewportSizeForPic, res.viewportSizeForPic,\r\n                0,0,canvasSize,canvasSize));\r\n            myc.context.globalAlpha = 1;            \r\n        },\r\n    });\r\n    \r\n    let originCanvas = new MyCanvas({\r\n        consts :{\r\n            renderLightness : (lightness)=>{\r\n                for(let pos of originCanvas.vars.pos_lightness[lightness]) {\r\n                    let mosaicInfo = originCanvas.vars.mosaicInfo;\r\n                    let cur = mosaicInfo[pos[1]][pos[0]];\r\n                    let imgs = originCanvas.vars.imgs_lightness;\r\n                    let curImage; \r\n                    //이미지를 채울 때 주변에 이미 있는 사진은 제외함   \r\n                    let candis = new Array();                 \r\n                    for(let i in imgs[lightness]){\r\n                        let imgidx = imgs[lightness][i].imgidx;\r\n                        if(!cur.bannedList.has(imgidx)){\r\n                            candis.push([i,imgidx]);\r\n                        }\r\n                    }\r\n                    let rd = Math.floor(Math.random() * candis.length);\r\n                    if(!candis[rd]) debugger;\r\n                    cur.imageIdx = candis[rd][1];\r\n                    curImage = imgs[lightness][candis[rd][0]];\r\n                    //채울때 주변에 이 사진은 쓰지 말라고 표시함\r\n                    for(let i = -1; i <= 1; i++){\r\n                        for(let j = -1; j <= 1; j++){\r\n                            let x = pos[0]+i, y = pos[1]+j;\r\n                            if(mosaicInfo[y] && mosaicInfo[y][x]){\r\n                                mosaicInfo[y][x].bannedList.add(cur.imageIdx);\r\n                            }                            \r\n                        }                        \r\n                    }\r\n                    originCanvas.context.putImageData(curImage,pos[0]*MosaicSize,pos[1]*MosaicSize);  \r\n                }\r\n                originCanvas.vars.imgs_lightness[lightness] = null;\r\n                originCanvas.vars.pos_lightness[lightness] = null;\r\n            },\r\n            nOfSameLightnessImgs : 9,\r\n        },\r\n        vars : {\r\n            pos_lightness : new Array(256).fill(null).map(()=>new Array()),\r\n            imgs_lightness : new Array(256).fill(null).map(()=>new Array()),\r\n            imgInfo : [],\r\n            isFull : new Array(256).fill(false),\r\n            base : 0,\r\n            numOfColPixel : 0,\r\n            numOfRowPixel : 0,\r\n            mosaicInfo : null,\r\n            renderLightnessCnt : 0,\r\n        },\r\n        init : ()=>{            \r\n            //w, h 중 큰 것을 NumOfPixel개 로 나눠서 base를 구하고 base x base 크기의 정사각형으로 모자이크를 구성한다. \r\n            originCanvas.context.strokeStyle = 'rgba(0, 0, 0, 0)';\r\n            let w = bgImgRef.current.width;\r\n            let h = bgImgRef.current.height;\r\n            let base,numOfRowPixel,numOfColPixel;\r\n            if(w >= h){\r\n                base = w/NumOfPixel;\r\n                numOfRowPixel = parseInt(h/base);\r\n                h = numOfRowPixel * base;       \r\n                numOfColPixel = NumOfPixel;\r\n            }else{\r\n                base = h/NumOfPixel;\r\n                numOfColPixel = parseInt(w/base);\r\n                w = numOfColPixel * base;       \r\n                numOfRowPixel = NumOfPixel;\r\n            }\r\n\r\n            originCanvas.vars.mosaicInfo = new Array(numOfRowPixel);\r\n            for (var i = 0; i < numOfRowPixel; i++) {\r\n                originCanvas.vars.mosaicInfo[i] = new Array(numOfColPixel).fill(null).map(()=> new MosaicInfo());\r\n            }\r\n            //배경 이미지 로드 및 관련 정보 초기화\r\n            bgImg.renderedW = w;\r\n            bgImg.renderedH = h;\r\n            bgImg.zeroX = (bgImgRef.current.width - bgImg.renderedW)/2;\r\n            bgImg.zeroY = (bgImgRef.current.height - bgImg.renderedH)/2;\r\n            bgImg.renderedPixel = w > h ? w : h;\r\n            //drawImage를 활용 해상도를 기준 크기까지 줄임\r\n            tmpCanvasRef.current.width  = numOfColPixel;\r\n            tmpCanvasRef.current.height = numOfRowPixel;\r\n            let tmpctx = tmpCanvasRef.current.getContext('2d');\r\n            tmpctx.drawImage(bgImgRef.current,bgImg.zeroX,bgImg.zeroY,bgImg.renderedW,bgImg.renderedH,\r\n                                                    0,0,numOfColPixel,numOfRowPixel);\r\n\r\n            originCanvas.vars.base = base;\r\n            originCanvas.vars.numOfColPixel = numOfColPixel;\r\n            originCanvas.vars.numOfRowPixel = numOfRowPixel;\r\n            originCanvas.canvas.width = numOfColPixel*MosaicSize;\r\n            originCanvas.canvas.height = numOfRowPixel*MosaicSize;             \r\n        },\r\n        render : ()=>{                    \r\n            let vars = originCanvas.vars;\r\n            //돌면서 색상 채우고, 색상정보를 저장함\r\n            let tmpctx = tmpCanvasRef.current.getContext('2d');\r\n            let imageData = tmpctx.getImageData(0,0,vars.numOfColPixel,vars.numOfRowPixel).data;\r\n            for(let i = 0; i < vars.numOfRowPixel ; i++){\r\n                for(let j = 0; j < vars.numOfColPixel ; j++){\r\n                    let y = i*MosaicSize;\r\n                    let x = j*MosaicSize;\r\n                    let curPixel = 4*(i*vars.numOfColPixel + j);\r\n                    let lightness = parseInt((3*imageData[curPixel] + 4*imageData[curPixel+1] +imageData[curPixel+2]) >>> 3);\r\n                    lightness = Math.max(0,lightness-10);\r\n                    originCanvas.context.fillStyle = 'rgb('+ lightness + \",\"+ lightness +',' +lightness+')';\r\n                    originCanvas.context.fillRect(x,y,MosaicSize,MosaicSize);\r\n                    vars.pos_lightness[lightness].push([j,i]);\r\n                }                \r\n            }\r\n            //모자이크처리 이미지를 myc에 그리기 시작\r\n            myc.canAnimRun = true;\r\n            myc.canRender = true;\r\n            //사진을 하나씩 하나씩 불러오면서 비슷한 밝기에다 추가함\r\n            tmpCanvasRef.current.width  = MosaicSize * 2;\r\n            tmpCanvasRef.current.height = MosaicSize * 2;\r\n            \r\n            const onloadhandler = (e)=>{                        \r\n                tmpctx.drawImage(e.target, 0,0,MosaicSize*2,MosaicSize*2);\r\n                let imgDatas = [];\r\n                let idx = e.target.idx;\r\n                for(let i = 0; i < 4; i++){\r\n                    let x = (i%2 * MosaicSize);\r\n                    let y = Math.floor(i/2) * MosaicSize;\r\n                    imgDatas.push(tmpctx.getImageData(x,y,MosaicSize,MosaicSize));\r\n                }\r\n\r\n                if (!window.Worker) {\r\n                    for(let i = 0; i < 4; i++){\r\n                        let imageData = MyCanvas.img2greyScale(imgDatas[i]);\r\n                        let lightness = 0;\r\n                        let cnt = imageData.data.length/4;\r\n                        for(let i = 0 ; i < imageData.data.length; i+=4){\r\n                            lightness += imageData.data[i];\r\n                        }\r\n                        lightness = parseInt(lightness / cnt);\r\n                        \r\n                        for(let d = -20; d <= 10 ;d++){\r\n                            if(lightness + d >= 10 && lightness + d <= 235 && !originCanvas.vars.isFull[lightness + d]){\r\n                                if(d < 0){\r\n                                    let res = MyCanvas.lightnessMul(imageData, (lightness + d) / lightness);\r\n                                    res.imgidx = idx+i/10;\r\n                                    originCanvas.vars.imgs_lightness[lightness + d].push(res);\r\n                                }else if (d > 0){\r\n                                    let res = MyCanvas.lightnessAdd(imageData, d);\r\n                                    res.imgidx = idx+i/10;\r\n                                    originCanvas.vars.imgs_lightness[lightness + d].push(res);\r\n                                }else{\r\n                                    imageData.imgidx = idx+i/10;\r\n                                    originCanvas.vars.imgs_lightness[lightness + d].push(imageData);\r\n                                }\r\n\r\n                                let curSize = originCanvas.vars.imgs_lightness[lightness + d].length;\r\n                                if(curSize >= originCanvas.consts.nOfSameLightnessImgs){                                \r\n                                    originCanvas.vars.isFull[lightness + d] = true;\r\n                                    originCanvas.consts.renderLightness(lightness + d);\r\n                                }\r\n                            }                       \r\n                        } \r\n                    }                    \r\n                }else{\r\n                    const calLiWorker = new Worker(CalLiWorker);\r\n                    const greyScaleMaker = new Worker(GreyScaleMaker);  \r\n                    calLiWorker.onmessage = function(e) {//e에는  \r\n                        let lightness = e.data[0];\r\n                        let isComplete = true;\r\n                        for(let d = -20; d <= 10 ;d++){\r\n                            if(lightness + d >= 5 && lightness + d <= 245) {\r\n                                originCanvas.vars.isFull[lightness+d]++;\r\n                                if(originCanvas.vars.isFull[lightness+d] <= originCanvas.consts.nOfSameLightnessImgs){\r\n                                    isComplete = false;\r\n                                }\r\n                            }\r\n                        }\r\n                        if(!isComplete){\r\n                            greyScaleMaker.postMessage({\r\n                                isFull : originCanvas.vars.isFull,\r\n                                lightness : lightness,\r\n                                nOfSameLightnessImgs : originCanvas.consts.nOfSameLightnessImgs,\r\n                                imgData : e.data[1],\r\n                                imgidx : e.data[2]\r\n                            });\r\n                        }                        \r\n                    }\r\n                    greyScaleMaker.onmessage = function(e) {//e에는                        \r\n                        for(let i = 0; i< e.data.length;i++){\r\n                            let lightness = e.data[i][0];\r\n                            e.data[i][1].imgidx = e.data[i][2];\r\n                            originCanvas.vars.imgs_lightness[lightness].push(e.data[i][1]);\r\n                            let curSize = originCanvas.vars.imgs_lightness[lightness].length;\r\n                            if(curSize >= originCanvas.consts.nOfSameLightnessImgs){\r\n                                originCanvas.consts.renderLightness(lightness);\r\n                            }\r\n                        }                       \r\n                    }\r\n                    for(let i = 0; i < 4; i++){\r\n                        calLiWorker.postMessage([imgDatas[i],idx+i/10]);\r\n                    }                     \r\n                }\r\n                images[e.target.idx].tmpimg.onload = null;\r\n                images[e.target.idx].tmpimg = null;\r\n            };\r\n            \r\n            for(let idx = 0; idx < images.length/4;idx++){                \r\n                let tmpimg = new Image();\r\n                tmpimg.crossOrigin = \"Anonymous\";\r\n                tmpimg.idx = idx;                \r\n                tmpimg.addEventListener(\"load\", onloadhandler,{once : true});\r\n                tmpimg.src = images[idx].thumbnailUrl+\"&w=100&h=100&c=7\";\r\n                images[idx].tmpimg = tmpimg;\r\n            }\r\n            //정보 보여주는 팝업창을 띄우기\r\n        },\r\n    });\r\n    \r\n    useEffect(() => {\r\n        canvasRef.current.addEventListener('wheel', preventDefault);\r\n        bgImgRef.current.crossOrigin = \"Anonymous\";\r\n        bgImgRef.current.src = images[0].thumbnailUrl;\r\n        return ()=>{\r\n            originCanvas.delete();\r\n            myc.delete();\r\n        }\r\n    }, []);\r\n\r\n    const onWheelhandler = (e)=>{\r\n        let x = e.pageX - canvasRef.current.offsetLeft;\r\n        let y = e.pageY - canvasRef.current.offsetTop;\r\n        if(e.deltaY > 0){\r\n            myc.consts.zoom(x,y,-0.1);\r\n        }else if(e.deltaY < 0){\r\n            myc.consts.zoom(x,y,0.1);\r\n        }\r\n    }\r\n\r\n    let isMoved = false;\r\n    let prev = [];\r\n\r\n    const onmove = (e)=>{\r\n        let x ,y;\r\n        if(e.touches){\r\n            if(e.touches.length == 1){\r\n                x = e.touches[0].pageX - canvasRef.current.offsetLeft;\r\n                y = e.touches[0].pageY - canvasRef.current.offsetTop;\r\n                e.movementX = x - prev[0];\r\n                e.movementY = y - prev[1];\r\n            }else{\r\n                for (var i = 0; i < prev.length; i++) {\r\n                    if (e.pointerId == prev[i].pointerId) {\r\n                        prev[i] = e;\r\n                        break;\r\n                    }\r\n                }\r\n                  \r\n                if(e.touches.length > 2){\r\n                   \r\n                }\r\n            }\r\n            \r\n        }else{\r\n            x = e.pageX - canvasRef.current.offsetLeft;\r\n            y = e.pageY - canvasRef.current.offsetTop;\r\n        }\r\n        myc.consts.emp(x,y);\r\n        myc.consts.move(e.movementX, e.movementY);  \r\n    }\r\n    \r\n    const onClickhandler = (e)=>{\r\n        if(isMoved) return;\r\n        let x = e.pageX - canvasRef.current.offsetLeft;\r\n        let y = e.pageY - canvasRef.current.offsetTop;\r\n        myc.consts.click(x,y);\r\n    }\r\n    const ondown = (e)=>{\r\n        if(e.touches){\r\n            prev.push(e);            \r\n        }else{\r\n            prev = [e.clientX, e.clientY];\r\n        }        \r\n        myc.vars.canMove = true;\r\n    }\r\n    const onup = (e)=>{\r\n        if(e.touches){\r\n            for (let i = 0; i < prev.length; i++) {\r\n                if (prev[i].pointerId == e.pointerId) {\r\n                  prev.splice(i, 1);\r\n                  break;\r\n                }\r\n            }\r\n            if(prev.length <= 0){\r\n                isMoved = false;\r\n            }            \r\n        }else{\r\n            let d = Math.abs(e.clientX-prev[0]);\r\n            d += Math.abs(e.clientY-prev[1]);\r\n            isMoved = !!d;\r\n        }        \r\n        myc.vars.canMove = false;\r\n    }\r\n    const mouseLeave = (e)=>{      \r\n        myc.vars.canMove = false;\r\n    }\r\n    const onImageLoaded = (e)=>{          \r\n        myc.canRender = false;\r\n        myc.canAnimRun = false;\r\n        originCanvas.renderPicture(originCanvasRef.current);\r\n        myc.animStart(canvasRef.current);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <img className={styles.dispNone} ref={bgImgRef} onLoad={onImageLoaded}></img>\r\n        <canvas className={styles.width100} ref={canvasRef} width={canvasSize} height={canvasSize}\r\n            onClick={onClickhandler}\r\n            onWheel={onWheelhandler}\r\n            onMouseMove={onmove} \r\n            onMouseDown={ondown}\r\n            onMouseUp={onup}\r\n            onMouseLeave={mouseLeave}\r\n            onTouchStart={ondown}\r\n            onTouchMove={onmove}\r\n            onTouchEnd={onup}\r\n        >\r\n            이 브라우저는 캔버스를 지원하지 않습니다.\r\n        </canvas> \r\n        <canvas className={styles.dispNone} ref={tmpCanvasRef} width=\"100\" height=\"100\">\r\n        </canvas> \r\n        <canvas className={styles.dispNone} ref={originCanvasRef} width=\"100\" height=\"100\">\r\n        </canvas>                \r\n        </>  \r\n        \r\n    );\r\n});\r\n\r\nexport default Mosaic;","import React, { useEffect,useRef} from 'react';\r\nimport styles from './PopUp.module.css';\r\nfunction PopUp(props){\r\n    let abs;\r\n    if(props.imageInfo !== null){\r\n        abs = { \r\n            position: 'absolute',\r\n            left: `${props.imageInfo.popUpPos[0]}px`,\r\n            top: `${props.imageInfo.popUpPos[1]}px`,\r\n            width : `${props.imageInfo.popUpSize}px`,\r\n            height : `${props.imageInfo.popUpSize}px`,\r\n        };\r\n    }\r\n    /*{\r\n      popUpSize : popUpSize,\r\n      popUpPos : popUpPos,\r\n      imageId : imageInfo.imageId,\r\n      name: imageInfo.name,\r\n      thumbnail: imageInfo.thumbnail,\r\n      thumbnailUrl: imageInfo.thumbnailUrl,\r\n      webSearchUrl: imageInfo.webSearchUrl,                        \r\n    }*/\r\n    return (\r\n        <>\r\n        {props.imageInfo &&\r\n            <div className={styles.line} style={abs} onMouseLeave={props.hide}>            \r\n                <img className={styles.width100} src={props.imageInfo.thumbnailUrl+`&w=${props.imageInfo.popUpSize}&h=${props.imageInfo.popUpSize}&c=7`}/>            \r\n            </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PopUp;","import React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router ,Route, NavLink,Switch } from \"react-router-dom\";\r\nimport styles from './index.module.css';\r\nimport Mosaic from './Mosaic'\r\nimport PopUp from './PopUp'\r\n\r\nclass Main extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {popUpInfo: null};\r\n    this.popUp = this.popUp.bind(this);\r\n    this.hide = this.hide.bind(this);\r\n  }\r\n  popUp(popUpInfo){\r\n    if(popUpInfo === null){\r\n      this.hide();\r\n    }else{\r\n      this.setState({\r\n        popUpInfo: popUpInfo\r\n      });\r\n    }  \r\n  }\r\n\r\n  hide(){\r\n    this.setState({\r\n      popUpInfo: null\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (  \r\n      <>\r\n        \r\n        <div className={styles.container}>\r\n          \r\n          <main>\r\n            <Mosaic popUp = {this.popUp}/>     \r\n          </main>          \r\n          <PopUp imageInfo={this.state.popUpInfo}  hide={this.hide}></PopUp>\r\n        </div>\r\n         \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n    return (  \r\n      <>\r\n        <header>\r\n          <h1>오늘의 사진은...</h1>\r\n        </header>\r\n        <Router>              \r\n          <Switch>\r\n            <Route path='/99-interactions' component={Main} />\r\n            <Route path='*'>\r\n              없음\r\n            </Route> \r\n          </Switch>      \r\n        </Router>  \r\n        <footer>\r\n            <p>contact : iginganza@gmail.com</p>\r\n        </footer> \r\n      </>      \r\n    );\r\n  } \r\n} \r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}