{"version":3,"sources":["Mosaic.module.css","index.module.css","PopUp.module.css","calLiWorker.js","greyScaleMaker.js","lib/MyCanvas.js","Mosaic.js","PopUp.js","index.js"],"names":["module","exports","code","onmessage","e","imgData","data","imgidx","pixels","lightness","i","length","parseInt","cnt","postMessage","toString","substring","indexOf","lastIndexOf","blob","Blob","type","worker_script","URL","createObjectURL","isFull","nOfSameLightnessImgs","Uint8ClampedArray","li","res","d","copy","ImageData","width","height","dataCopy","k","set","push","MyCanvas","options","default_args","index","this","vars","consts","simulate","render","init","_delete","delete","simulResult","_prevSResult","lastReq","canAnimRun","canRender","_canvas","_init","renderFrame","canvas","context","getContext","timestamp","requestAnimationFrame","bind","clearRect","_simulate","cancelAnimationFrame","param","console","assert","beginPath","moveTo","forEach","element","lineTo","closePath","style","fillStyle","fill","rgb","v","Math","max","c","min","h","round","hsv","f","n","array","image","sx","sy","sw","sh","dx","dy","dw","dh","abs","x1","x2","y1","y2","w_ratio","h_ratio","MosaicSize","NumOfPixel","canvasSize","MosaicInfo","bannedList","Set","imageIdx","Mosaic","React","memo","props","canvasRef","useRef","originCanvasRef","tmpCanvasRef","bgImgRef","bgImg","images","fetch","method","then","json","imgInfos","value","current","crossOrigin","src","thumbnailUrl","setTodayPersonMsg","todayPerson","preventDefault","myc","setPos","pos","zoom","posX","posY","ratioX","ratioY","zoomScale","prevSize","originSize","maxZoomScale","viewportSize","preva","prevb","cura","curb","getClampVal","posToIdx","clientWidth","floor","click","x","curHoveredPos","y","originCanvas","numOfColPixel","numOfRowPixel","mosaicInfo","toCanvasCoeff","idxc","idxr","dc","dr","curMosaicSize","popUpSize","popUpPos","offsetLeft","offsetTop","imageInfo","popUp","imageId","name","thumbnail","webSearchUrl","emp","move","isInit","canMove","ratioW","ratioH","radioOfPic","renderedPixel","picPos","zeroX","zeroY","viewportSizeForPic","hoverLineSize","hoveredPos","slice","drawImage","getSafeRect","stroke","globalAlpha","renderLightness","pos_lightness","curImage","cur","imgs","imgs_lightness","candis","Array","has","rd","random","j","add","putImageData","map","imgInfo","base","renderLightnessCnt","strokeStyle","w","renderedW","renderedH","tmpctx","imageData","getImageData","curPixel","fillRect","onloadhandler","target","imgDatas","idx","window","Worker","calLiWorker","CalLiWorker","greyScaleMaker","GreyScaleMaker","isComplete","img2greyScale","lightnessMul","lightnessAdd","tmpimg","onload","Image","addEventListener","once","useEffect","isMoved","prev","downpos","onmove","touches","hide","pageX","pageY","midx","midy","prevDiff","sqrt","changedTouches","identifier","diff","movementX","movementY","ondown","clientX","clientY","onup","className","styles","dispNone","ref","onLoad","renderPicture","animStart","width100","onClick","onWheel","deltaY","onMouseMove","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","PopUp","position","left","top","line","href","rel","alt","Main","state","popUpInfo","todayPersonMessage","setState","msg","noti","container","Component","App","path","component","title","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6bc81d27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"width100\":\"Mosaic_width100__S9aJL\",\"widthS\":\"Mosaic_widthS__1Cwbq\",\"dispNone\":\"Mosaic_dispNone__1AiSt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noti\":\"src_noti__1YoO6\",\"container\":\"src_container__2CCsS\",\"linkActive\":\"src_linkActive__1RTXz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PopUp_block__1nSDr\",\"dispNone\":\"PopUp_dispNone__1cfJR\",\"line\":\"PopUp_line__2rWzI\",\"width100\":\"PopUp_width100__272wI\"};","const workercode = () => {\r\n    onmessage = function(e) {\r\n        let imgData = e.data[0];\r\n        let imgidx = e.data[1];\r\n        let pixels = imgData.data;\r\n        let lightness = 0;\r\n        for (var i = 0; i < pixels.length; i += 4) {\r\n            lightness += parseInt((3*pixels[i] + 4*pixels[i + 1] + pixels[i + 2]) >>> 3);\r\n        }\r\n        let cnt = imgData.data.length/4;\r\n        lightness = parseInt(lightness / cnt);\r\n        postMessage([lightness, imgData,imgidx]);\r\n    }\r\n};\r\n\r\nlet code = workercode.toString();\r\ncode = code.substring(code.indexOf(\"{\")+1, code.lastIndexOf(\"}\"));\r\n\r\nconst blob = new Blob([code], {type: \"application/javascript\"});\r\nconst worker_script = URL.createObjectURL(blob);\r\n\r\nmodule.exports = worker_script;","const workercode = () => {\r\n    onmessage = function(e) {\r\n        let isFull = e.data.isFull;\r\n        let lightness = e.data.lightness;\r\n        let imgData = e.data.imgData;\r\n        let imgidx = e.data.imgidx;\r\n        let nOfSameLightnessImgs = e.data.nOfSameLightnessImgs;\r\n        let pixels = new Uint8ClampedArray(imgData.data);\r\n        for (let i = 0; i < pixels.length; i += 4) {\r\n            let li = parseInt((3*pixels[i] + 4*pixels[i + 1] + pixels[i + 2]) >>> 3);\r\n            pixels[i] = li;\r\n            pixels[i + 1] = li;\r\n            pixels[i + 2] = li;\r\n        }\r\n        let res = [];\r\n        for(let d = -20; d <= 10 ;d++){\r\n            if(lightness + d >= 5 && lightness + d <= 245 \r\n                && isFull[lightness + d] <= nOfSameLightnessImgs) {\r\n                let copy = new ImageData(imgData.width,imgData.height);\r\n                let dataCopy = new Uint8ClampedArray(pixels);\r\n                if(d < 0){\r\n                    let k = (lightness + d) / lightness;\r\n                    for (let i = 0; i < dataCopy.length; i += 4) {\r\n                        dataCopy[i] *= k;\r\n                        dataCopy[i + 1] *= k;\r\n                        dataCopy[i + 2] *= k;\r\n                    }\r\n                }else if (d > 0){\r\n                    for (let i = 0; i < dataCopy.length; i += 4) {\r\n                        dataCopy[i] += d;\r\n                        dataCopy[i + 1] += d;\r\n                        dataCopy[i + 2] += d;\r\n                    }\r\n                }\r\n                copy.data.set(dataCopy);\r\n                res.push([lightness+d,copy,imgidx]);\r\n            }\r\n        }\r\n        postMessage(res);\r\n    }\r\n};\r\n\r\nlet code = workercode.toString();\r\ncode = code.substring(code.indexOf(\"{\")+1, code.lastIndexOf(\"}\"));\r\n\r\nconst blob = new Blob([code], {type: \"application/javascript\"});\r\nconst worker_script = URL.createObjectURL(blob);\r\n\r\nmodule.exports = worker_script;","export class MyCanvas{\r\n  constructor(options){    \r\n    var default_args = {\r\n      'vars'       :   null,\r\n      'consts'     :   null,\r\n      'simulate'   :   ()=>{},\r\n      'render'     :   ()=>{},\r\n      'init'       :   ()=>{},\r\n      'delete'     :   ()=>{},\r\n    }\r\n    for (var index in default_args) {\r\n        if (typeof options[index] == \"undefined\") options[index] = default_args[index];\r\n    }\r\n    this.vars = options.vars;\r\n    this.consts = options.consts;\r\n    this.simulate = options.simulate;\r\n    this.render = options.render;\r\n    this.init = options.init;\r\n    this._delete = options.delete;\r\n    this.simulResult = null;\r\n    this._prevSResult = null;\r\n    this.lastReq = null;\r\n    this.canAnimRun = true;\r\n    this.canRender = true;\r\n  }\r\n  \r\n  animStart(_canvas){\r\n    this._init(_canvas);\r\n    this.renderFrame();\r\n  }\r\n  _init(_canvas){\r\n    this.canvas = _canvas;\r\n    this.context = _canvas.getContext('2d');\r\n    this.init();\r\n  }\r\n  renderFrame(timestamp){   \r\n    this.lastReq = requestAnimationFrame(this.renderFrame.bind(this));\r\n    if(!this.canAnimRun) return;    \r\n    this.context.clearRect(0, 0, this.canvas.width,  this.canvas.height);\r\n    this._simulate(timestamp);\r\n    if(!this.canRender) return;\r\n    this.render(timestamp);\r\n    \r\n  }\r\n  renderPicture(_canvas){\r\n    this._init(_canvas);\r\n    if(!this.canRender) return;\r\n    this.context.clearRect(0, 0, this.canvas.width,  this.canvas.height);\r\n    this.render();\r\n  }\r\n  _simulate(timestamp){\r\n    this.simulate(timestamp);\r\n  }\r\n  delete(){\r\n    cancelAnimationFrame(this.lastReq);\r\n    this._delete();\r\n  }\r\n  drawPolygon(param){\r\n    console.assert(param && param.length > 2, \"다각형을 구성하는 점이 너무 작습니다.\");\r\n    this.context.beginPath();\r\n    this.context.moveTo(param[0][0], param[0][1]);\r\n    param.forEach(element => {\r\n      this.context.lineTo(element[0],element[1]);\r\n    });\r\n    this.context.closePath();\r\n  }\r\n  fill(style){\r\n    this.context.fillStyle = style;\r\n    this.context.fill();\r\n  }\r\n  static rgb2hsv(rgb) {\r\n    let v = Math.max(rgb[0],rgb[1],rgb[2]), c = v-Math.min(rgb[0],rgb[1],rgb[2]);\r\n    let h = c && ((v===rgb[0]) ? (rgb[1]-rgb[2])/c : ((v===rgb[1]) ? 2+(rgb[2]-rgb[0])/c : 4+(rgb[0]-rgb[1])/c)); \r\n    return [Math.round(60*(h<0?h+6:h)), v&&c/v, v];\r\n  }\r\n  static hsv2rgb(hsv){                            \r\n    let f = (n,k=(n+hsv[0]/60)%6) => hsv[2] - hsv[2]*hsv[1]*Math.max( Math.min(k,4-k,1), 0);     \r\n    return [f(5),f(3),f(1)];       \r\n  }\r\n  static getGreyScale(imgData){\r\n    let array = imgData;\r\n    if(array.data) array = array.data;\r\n    return parseInt((3*array[0] + 4*array[1] + array[2]) >>> 3);\r\n  }\r\n  static lightnessMul(imgData,k){\r\n    let res = new ImageData(imgData.width,imgData.height);\r\n    var pixels = new Uint8ClampedArray(imgData.data);\r\n    for (var i = 0; i < pixels.length; i += 4) {\r\n      pixels[i] *= k;\r\n      pixels[i + 1] *= k;\r\n      pixels[i + 2] *= k;\r\n    }\r\n    res.data.set(pixels);\r\n    return res;\r\n  }\r\n  static lightnessAdd(imgData,k){\r\n    let res = new ImageData(imgData.width,imgData.height);\r\n    var pixels = new Uint8ClampedArray(imgData.data);\r\n    for (var i = 0; i < pixels.length; i += 4) {\r\n      pixels[i] += k;\r\n      pixels[i + 1] += k;\r\n      pixels[i + 2] += k;\r\n    }\r\n    res.data.set(pixels);\r\n    return res;\r\n  }\r\n  static img2greyScale(imgData){\r\n    let pixels = imgData.data;\r\n    for (var i = 0; i < pixels.length; i += 4) {\r\n        let lightness = parseInt((3*pixels[i] + 4*pixels[i + 1] + pixels[i + 2]) >>> 3);\r\n        pixels[i] = lightness;\r\n        pixels[i + 1] = lightness;\r\n        pixels[i + 2] = lightness;\r\n    }\r\n    return imgData;\r\n  }\r\n\r\n  static getSafeRect( image, sx, sy, sw, sh, dx, dy, dw, dh ) {  \r\n    const { width, height } = image;    \r\n    if( sw < 0 ) {\r\n      sx += sw;\r\n      sw = Math.abs( sw );\r\n    }\r\n    if( sh < 0 ) {\r\n      sy += sh;\r\n      sh = Math.abs( sh );\r\n    }\r\n    if( dw < 0 ) {\r\n      dx += dw;\r\n      dw = Math.abs( dw );\r\n    }\r\n    if( dh < 0 ) {\r\n      dy += dh;\r\n      dh = Math.abs( dh );\r\n    }\r\n    const x1 = Math.max( sx, 0 );\r\n    const x2 = Math.min( sx + sw, width );\r\n    const y1 = Math.max( sy, 0 );\r\n    const y2 = Math.min( sy + sh, height );\r\n    const w_ratio = dw / sw;\r\n    const h_ratio = dh / sh;\r\n\r\n    return [\r\n      image,\r\n      x1,\r\n      y1,\r\n      x2 - x1,\r\n      y2 - y1,\r\n      sx < 0 ? dx - (sx * w_ratio) : dx,\r\n      sy < 0 ? dy - (sy * h_ratio) : dy,\r\n      (x2 - x1) * w_ratio,\r\n      (y2 - y1) * h_ratio\r\n    ];\r\n  }\r\n}  ","import React, { useEffect, useRef, useState } from 'react';\r\nimport { MyCanvas } from './lib/MyCanvas';\r\nimport CalLiWorker from \"./calLiWorker\";\r\nimport GreyScaleMaker from \"./greyScaleMaker\";\r\nimport styles from './Mosaic.module.css';\r\n\r\n\r\nconst MosaicSize = 30;\r\nconst NumOfPixel = 100;\r\nconst canvasSize = 800;\r\nclass MosaicInfo {\r\n    constructor() {\r\n        this.bannedList = new Set();\r\n        this.imageIdx = null;\r\n    }\r\n};\r\nconst Mosaic = React.memo((props) => {\r\n    let canvasRef = useRef(null);\r\n    let originCanvasRef = useRef(null);\r\n    let tmpCanvasRef = useRef(null);\r\n    let bgImgRef = useRef(null);\r\n    let bgImg = {};\r\n    let images = [];\r\n    fetch(\"https://99-interactions-functions.azurewebsites.net/api/HttpTrigger1?code=gyPykVBnZ5lSl3vwOm3BvEojwZolAbHSuujci28YxApqalzrA2rHfw==\", {\r\n        method: 'GET',\r\n    }).then(res => res.json())\r\n        .then(json => {\r\n            images = json.imgInfos.value;\r\n            bgImgRef.current.crossOrigin = \"Anonymous\";\r\n            bgImgRef.current.src = images[0].thumbnailUrl + \"&w=400&h=400&c=7&p=0\";\r\n            props.setTodayPersonMsg(json.todayPerson);\r\n        });\r\n    const preventDefault = e => e.preventDefault();\r\n    let myc = new MyCanvas({\r\n        consts: {\r\n            setPos: (dx, dy) => {\r\n                myc.vars.pos[0] += dx;\r\n                myc.vars.pos[1] += dy;\r\n                myc.vars.pos[2] += dx;\r\n                myc.vars.pos[3] += dy;\r\n            },\r\n            zoom: (posX, posY, d) => {\r\n                let ratioX = posX / canvasSize;\r\n                let ratioY = posY / canvasSize;\r\n                d *= myc.vars.zoomScale;\r\n                let prevSize = myc.vars.originSize / myc.vars.zoomScale;\r\n                myc.vars.zoomScale = Math.min(myc.vars.maxZoomScale, Math.max(1, myc.vars.zoomScale + d));\r\n                let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n\r\n                let preva = prevSize * ratioX;\r\n                let prevb = prevSize * ratioY;\r\n                let cura = viewportSize * ratioX;\r\n                let curb = viewportSize * ratioY;\r\n                let [dx, dy] = myc.consts.getClampVal(cura - preva, curb - prevb);\r\n\r\n                myc.consts.setPos(dx, dy);\r\n            },\r\n            posToIdx: (posX, posY) => {\r\n                let ratioX = posX / canvasRef.current.clientWidth;\r\n                let ratioY = posY / canvasRef.current.clientWidth;\r\n                let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n                let dx = viewportSize * ratioX;\r\n                let dy = viewportSize * ratioY;\r\n\r\n                let idxC = Math.floor((-myc.vars.pos[0] + dx) / MosaicSize);\r\n                let idxR = Math.floor((-myc.vars.pos[1] + dy) / MosaicSize);\r\n                return [idxC, idxR];\r\n            },\r\n            click: (posX, posY) => {\r\n                let x = myc.vars.curHoveredPos[0];\r\n                let y = myc.vars.curHoveredPos[1];\r\n                if (0 <= x && x < originCanvas.vars.numOfColPixel && 0 <= y && y < originCanvas.vars.numOfRowPixel\r\n                    && originCanvas.vars.mosaicInfo[y][x].imageIdx !== null) {\r\n                    //현재 마우스 포인터가 캔버스 기준으로\r\n                    //현재 인덱스는 캔버스 기준으로 바꾸면 좌상단이 몇몇인가?\r\n                    let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n                    let toCanvasCoeff = canvasRef.current.clientWidth / viewportSize;\r\n                    let idxc = x * MosaicSize * toCanvasCoeff;\r\n                    let idxr = y * MosaicSize * toCanvasCoeff;\r\n                    let zeroc = myc.vars.pos[0] * toCanvasCoeff;\r\n                    let zeror = myc.vars.pos[1] * toCanvasCoeff;\r\n                    idxc += zeroc;\r\n                    idxr += zeror;\r\n\r\n                    //좌상단과 현재 마우스 포인터를 비교해서 모자이크에서 얼마만큼 갔고 얼마만큼 남았나 \r\n                    let dc = posX - idxc;\r\n                    let dr = posY - idxr;\r\n                    let curMosaicSize = MosaicSize * toCanvasCoeff;\r\n\r\n\r\n                    let popUpSize = Math.floor(canvasRef.current.clientWidth / 2 - curMosaicSize);\r\n                    let popUpPos = [0, 0];\r\n                    if (posX > canvasRef.current.clientWidth / 2) popUpPos[0] = posX + (curMosaicSize - dc) - popUpSize;\r\n                    else popUpPos[0] = (posX - dc);\r\n                    if (posY > canvasRef.current.clientWidth / 2) popUpPos[1] = posY + (curMosaicSize - dr) - popUpSize;\r\n                    else popUpPos[1] = (posY - dr);\r\n                    popUpPos[0] = Math.min(canvasRef.current.clientWidth - popUpSize, Math.max(0, popUpPos[0])) + canvasRef.current.offsetLeft;\r\n                    popUpPos[1] = Math.min(canvasRef.current.clientWidth - popUpSize, Math.max(0, popUpPos[1])) + canvasRef.current.offsetTop;\r\n                    let imageIdx = originCanvas.vars.mosaicInfo[y][x].imageIdx;\r\n                    let imageInfo = images[Math.floor(imageIdx)];\r\n                    props.popUp({\r\n                        popUpSize: popUpSize,\r\n                        popUpPos: popUpPos,\r\n                        imageId: imageInfo.imageId,\r\n                        name: imageInfo.name,\r\n                        thumbnail: imageInfo.thumbnail,\r\n                        thumbnailUrl: imageInfo.thumbnailUrl,\r\n                        webSearchUrl: imageInfo.webSearchUrl,\r\n                    });\r\n                } else {\r\n                    props.popUp(null);\r\n                }\r\n            },\r\n            emp: (posX, posY) => {\r\n                let pos = myc.consts.posToIdx(posX, posY);\r\n                if (0 <= pos[0] && pos[0] < originCanvas.vars.numOfColPixel\r\n                    && 0 <= pos[1] && pos[1] < originCanvas.vars.numOfRowPixel) {\r\n                    myc.vars.curHoveredPos = pos;\r\n                } else {\r\n                    myc.vars.curHoveredPos = [-100, -100];\r\n                }\r\n\r\n            },\r\n            move: (dx, dy) => {\r\n                if (!myc.vars.isInit || !myc.vars.canMove) return;\r\n                dx = dx * 10 / myc.vars.zoomScale;\r\n                dy = dy * 10 / myc.vars.zoomScale;\r\n                [dx, dy] = myc.consts.getClampVal(dx, dy);\r\n\r\n                myc.consts.setPos(dx, dy);\r\n            },\r\n            getClampVal: (x, y) => {\r\n                let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n                //원본크기가 뷰포트사이즈보다 같거나 작을때\r\n                if (viewportSize >= myc.vars.originSize * myc.vars.ratioW) {\r\n                    x = Math.max(-myc.vars.pos[0], x);//최소를 정함\r\n                    x = Math.min(viewportSize - myc.vars.pos[2], x);//최대를 정함\r\n                } else {\r\n                    x = Math.max(viewportSize - myc.vars.pos[2], x);//최소를 정함\r\n                    x = Math.min(-myc.vars.pos[0], x);//최대를 정함\r\n                }\r\n                if (viewportSize >= myc.vars.originSize * myc.vars.ratioH) {\r\n                    y = Math.max(-myc.vars.pos[1], y);\r\n                    y = Math.min(viewportSize - myc.vars.pos[3], y);\r\n                } else {\r\n                    y = Math.max(viewportSize - myc.vars.pos[3], y);\r\n                    y = Math.min(-myc.vars.pos[1], y);\r\n                }\r\n                return [x, y];\r\n            }\r\n        },\r\n        vars: {\r\n            zoomScale: 1,\r\n            pos: [0, 0, 0, 0],\r\n            curHoveredPos: [-10, -10],\r\n            isInit: false,\r\n            maxZoomScale: 1,\r\n            originSize: 1000,\r\n            canMove: false,\r\n            ratioW: 1,\r\n            ratioH: 1,\r\n            radioOfPic: 1,\r\n        },\r\n        init: () => {\r\n            myc.vars.originSize = originCanvas.canvas.width > originCanvas.canvas.height ? originCanvas.canvas.width : originCanvas.canvas.height;\r\n            myc.vars.ratioW = originCanvas.canvas.width / myc.vars.originSize;\r\n            myc.vars.ratioH = originCanvas.canvas.height / myc.vars.originSize;\r\n            myc.vars.pos[0] = myc.vars.originSize * (1 - myc.vars.ratioW) / 2;\r\n            myc.vars.pos[1] = myc.vars.originSize * (1 - myc.vars.ratioH) / 2;\r\n            myc.vars.pos[2] = myc.vars.pos[0] + myc.vars.originSize * myc.vars.ratioW;\r\n            myc.vars.pos[3] = myc.vars.pos[1] + myc.vars.originSize * myc.vars.ratioH;\r\n            myc.vars.maxZoomScale = myc.vars.originSize * (100 / MosaicSize) / canvasSize;\r\n            myc.vars.radioOfPic = bgImg.renderedPixel / myc.vars.originSize;\r\n            let d = myc.vars.pos[0] + myc.vars.pos[1];\r\n            if (d > canvasSize / 8) {\r\n                myc.consts.zoom(canvasSize / 2, canvasSize / 2, myc.vars.originSize / (myc.vars.originSize - 1.7 * d) - 1);\r\n            }\r\n\r\n            myc.vars.isInit = true;\r\n\r\n        },\r\n        simulate: () => {\r\n            let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n            let picPos = [-bgImg.zeroX + myc.vars.pos[0] * myc.vars.radioOfPic, -bgImg.zeroY + myc.vars.pos[1] * myc.vars.radioOfPic];\r\n            let viewportSizeForPic = bgImg.renderedPixel / myc.vars.zoomScale;\r\n            let hoverLineSize = MosaicSize * canvasSize / viewportSize;\r\n            let hoveredPos = myc.vars.curHoveredPos.slice();\r\n            hoveredPos[0] = hoveredPos[0] * MosaicSize + myc.vars.pos[0];\r\n            hoveredPos[1] = hoveredPos[1] * MosaicSize + myc.vars.pos[1];\r\n            hoveredPos[0] *= canvasSize / viewportSize;\r\n            hoveredPos[1] *= canvasSize / viewportSize;\r\n            myc.simulResult = {\r\n                viewportSize: viewportSize,\r\n                pos: myc.vars.pos,\r\n                picPos: picPos,\r\n                viewportSizeForPic: viewportSizeForPic,\r\n                hoveredPos: hoveredPos,\r\n                hoverLineSize: hoverLineSize,\r\n            };\r\n        },\r\n        render: () => {\r\n            //그리기\r\n            let res = myc.simulResult;\r\n            myc.context.drawImage(...MyCanvas.getSafeRect(originCanvas.canvas,\r\n                -res.pos[0], -res.pos[1], res.viewportSize, res.viewportSize,\r\n                0, 0, canvasSize, canvasSize));\r\n            myc.context.beginPath();\r\n            myc.context.lineTo(res.hoveredPos[0], res.hoveredPos[1]);\r\n            myc.context.lineTo(res.hoveredPos[0] + res.hoverLineSize, res.hoveredPos[1]);\r\n            myc.context.lineTo(res.hoveredPos[0] + res.hoverLineSize, res.hoveredPos[1] + res.hoverLineSize);\r\n            myc.context.lineTo(res.hoveredPos[0], res.hoveredPos[1] + res.hoverLineSize);\r\n            myc.context.closePath();\r\n            myc.context.stroke();\r\n\r\n            myc.context.globalAlpha = 0.2;\r\n            myc.context.drawImage(...MyCanvas.getSafeRect(bgImgRef.current,\r\n                -res.picPos[0], -res.picPos[1], res.viewportSizeForPic, res.viewportSizeForPic,\r\n                0, 0, canvasSize, canvasSize));\r\n            myc.context.globalAlpha = 1;\r\n        },\r\n    });\r\n\r\n    let originCanvas = new MyCanvas({\r\n        consts: {\r\n            renderLightness: (lightness) => {\r\n                for (let pos of originCanvas.vars.pos_lightness[lightness]) {\r\n                    let mosaicInfo = originCanvas.vars.mosaicInfo;\r\n                    let cur = mosaicInfo[pos[1]][pos[0]];\r\n                    let imgs = originCanvas.vars.imgs_lightness;\r\n                    let curImage;\r\n                    //이미지를 채울 때 주변에 이미 있는 사진은 제외함   \r\n                    let candis = new Array();\r\n                    for (let i in imgs[lightness]) {\r\n                        let imgidx = imgs[lightness][i].imgidx;\r\n                        if (!cur.bannedList.has(imgidx)) {\r\n                            candis.push([i, imgidx]);\r\n                        }\r\n                    }\r\n                    let rd = Math.floor(Math.random() * candis.length);\r\n                    if (!candis[rd]) debugger;\r\n                    cur.imageIdx = candis[rd][1];\r\n                    curImage = imgs[lightness][candis[rd][0]];\r\n                    //채울때 주변에 이 사진은 쓰지 말라고 표시함\r\n                    for (let i = -1; i <= 1; i++) {\r\n                        for (let j = -1; j <= 1; j++) {\r\n                            let x = pos[0] + i, y = pos[1] + j;\r\n                            if (mosaicInfo[y] && mosaicInfo[y][x]) {\r\n                                mosaicInfo[y][x].bannedList.add(cur.imageIdx);\r\n                            }\r\n                        }\r\n                    }\r\n                    originCanvas.context.putImageData(curImage, pos[0] * MosaicSize, pos[1] * MosaicSize);\r\n                }\r\n                originCanvas.vars.imgs_lightness[lightness] = null;\r\n                originCanvas.vars.pos_lightness[lightness] = null;\r\n            },\r\n            nOfSameLightnessImgs: 9,\r\n        },\r\n        vars: {\r\n            pos_lightness: new Array(256).fill(null).map(() => new Array()),\r\n            imgs_lightness: new Array(256).fill(null).map(() => new Array()),\r\n            imgInfo: [],\r\n            isFull: new Array(256).fill(false),\r\n            base: 0,\r\n            numOfColPixel: 0,\r\n            numOfRowPixel: 0,\r\n            mosaicInfo: null,\r\n            renderLightnessCnt: 0,\r\n        },\r\n        init: () => {\r\n            //w, h 중 큰 것을 NumOfPixel개 로 나눠서 base를 구하고 base x base 크기의 정사각형으로 모자이크를 구성한다. \r\n            originCanvas.context.strokeStyle = 'rgba(0, 0, 0, 0)';\r\n            let w = bgImgRef.current.width;\r\n            let h = bgImgRef.current.height;\r\n            let base, numOfRowPixel, numOfColPixel;\r\n            if (w >= h) {\r\n                base = w / NumOfPixel;\r\n                numOfRowPixel = parseInt(h / base);\r\n                h = numOfRowPixel * base;\r\n                numOfColPixel = NumOfPixel;\r\n            } else {\r\n                base = h / NumOfPixel;\r\n                numOfColPixel = parseInt(w / base);\r\n                w = numOfColPixel * base;\r\n                numOfRowPixel = NumOfPixel;\r\n            }\r\n\r\n            originCanvas.vars.mosaicInfo = new Array(numOfRowPixel);\r\n            for (var i = 0; i < numOfRowPixel; i++) {\r\n                originCanvas.vars.mosaicInfo[i] = new Array(numOfColPixel).fill(null).map(() => new MosaicInfo());\r\n            }\r\n            //배경 이미지 로드 및 관련 정보 초기화\r\n            bgImg.renderedW = w;\r\n            bgImg.renderedH = h;\r\n            bgImg.zeroX = (bgImgRef.current.width - bgImg.renderedW) / 2;\r\n            bgImg.zeroY = (bgImgRef.current.height - bgImg.renderedH) / 2;\r\n            bgImg.renderedPixel = w > h ? w : h;\r\n            //drawImage를 활용 해상도를 기준 크기까지 줄임\r\n            tmpCanvasRef.current.width = numOfColPixel;\r\n            tmpCanvasRef.current.height = numOfRowPixel;\r\n            let tmpctx = tmpCanvasRef.current.getContext('2d');\r\n            tmpctx.drawImage(bgImgRef.current, bgImg.zeroX, bgImg.zeroY, bgImg.renderedW, bgImg.renderedH,\r\n                0, 0, numOfColPixel, numOfRowPixel);\r\n\r\n            originCanvas.vars.base = base;\r\n            originCanvas.vars.numOfColPixel = numOfColPixel;\r\n            originCanvas.vars.numOfRowPixel = numOfRowPixel;\r\n            originCanvas.canvas.width = numOfColPixel * MosaicSize;\r\n            originCanvas.canvas.height = numOfRowPixel * MosaicSize;\r\n        },\r\n        render: () => {\r\n            let vars = originCanvas.vars;\r\n            //돌면서 색상 채우고, 색상정보를 저장함\r\n            let tmpctx = tmpCanvasRef.current.getContext('2d');\r\n            let imageData = tmpctx.getImageData(0, 0, vars.numOfColPixel, vars.numOfRowPixel).data;\r\n            for (let i = 0; i < vars.numOfRowPixel; i++) {\r\n                for (let j = 0; j < vars.numOfColPixel; j++) {\r\n                    let y = i * MosaicSize;\r\n                    let x = j * MosaicSize;\r\n                    let curPixel = 4 * (i * vars.numOfColPixel + j);\r\n                    let lightness = parseInt((3 * imageData[curPixel] + 4 * imageData[curPixel + 1] + imageData[curPixel + 2]) >>> 3);\r\n                    lightness = Math.max(0, lightness - 10);\r\n                    originCanvas.context.fillStyle = 'rgb(' + lightness + \",\" + lightness + ',' + lightness + ')';\r\n                    originCanvas.context.fillRect(x, y, MosaicSize, MosaicSize);\r\n                    vars.pos_lightness[lightness].push([j, i]);\r\n                }\r\n            }\r\n            //모자이크처리 이미지를 myc에 그리기 시작\r\n            myc.canAnimRun = true;\r\n            myc.canRender = true;\r\n            //사진을 하나씩 하나씩 불러오면서 비슷한 밝기에다 추가함\r\n            tmpCanvasRef.current.width = MosaicSize * 2;\r\n            tmpCanvasRef.current.height = MosaicSize * 2;\r\n\r\n            const onloadhandler = (e) => {\r\n                tmpctx.drawImage(e.target, 0, 0, MosaicSize * 2, MosaicSize * 2);\r\n                let imgDatas = [];\r\n                let idx = e.target.idx;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let x = (i % 2 * MosaicSize);\r\n                    let y = Math.floor(i / 2) * MosaicSize;\r\n                    imgDatas.push(tmpctx.getImageData(x, y, MosaicSize, MosaicSize));\r\n                }\r\n\r\n                if (!window.Worker) {\r\n                    for (let i = 0; i < 4; i++) {\r\n                        let imageData = MyCanvas.img2greyScale(imgDatas[i]);\r\n                        let lightness = 0;\r\n                        let cnt = imageData.data.length / 4;\r\n                        for (let i = 0; i < imageData.data.length; i += 4) {\r\n                            lightness += imageData.data[i];\r\n                        }\r\n                        lightness = parseInt(lightness / cnt);\r\n\r\n                        for (let d = -20; d <= 10; d++) {\r\n                            if (lightness + d >= 10 && lightness + d <= 235 && !originCanvas.vars.isFull[lightness + d]) {\r\n                                if (d < 0) {\r\n                                    let res = MyCanvas.lightnessMul(imageData, (lightness + d) / lightness);\r\n                                    res.imgidx = idx + i / 10;\r\n                                    originCanvas.vars.imgs_lightness[lightness + d].push(res);\r\n                                } else if (d > 0) {\r\n                                    let res = MyCanvas.lightnessAdd(imageData, d);\r\n                                    res.imgidx = idx + i / 10;\r\n                                    originCanvas.vars.imgs_lightness[lightness + d].push(res);\r\n                                } else {\r\n                                    imageData.imgidx = idx + i / 10;\r\n                                    originCanvas.vars.imgs_lightness[lightness + d].push(imageData);\r\n                                }\r\n\r\n                                let curSize = originCanvas.vars.imgs_lightness[lightness + d].length;\r\n                                if (curSize >= originCanvas.consts.nOfSameLightnessImgs) {\r\n                                    originCanvas.vars.isFull[lightness + d] = true;\r\n                                    originCanvas.consts.renderLightness(lightness + d);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    const calLiWorker = new Worker(CalLiWorker);\r\n                    const greyScaleMaker = new Worker(GreyScaleMaker);\r\n                    calLiWorker.onmessage = function (e) {//e에는  \r\n                        let lightness = e.data[0];\r\n                        let isComplete = true;\r\n                        for (let d = -20; d <= 10; d++) {\r\n                            if (lightness + d >= 5 && lightness + d <= 245) {\r\n                                originCanvas.vars.isFull[lightness + d]++;\r\n                                if (originCanvas.vars.isFull[lightness + d] <= originCanvas.consts.nOfSameLightnessImgs) {\r\n                                    isComplete = false;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!isComplete) {\r\n                            greyScaleMaker.postMessage({\r\n                                isFull: originCanvas.vars.isFull,\r\n                                lightness: lightness,\r\n                                nOfSameLightnessImgs: originCanvas.consts.nOfSameLightnessImgs,\r\n                                imgData: e.data[1],\r\n                                imgidx: e.data[2]\r\n                            });\r\n                        }\r\n                    }\r\n                    greyScaleMaker.onmessage = function (e) {//e에는                        \r\n                        for (let i = 0; i < e.data.length; i++) {\r\n                            let lightness = e.data[i][0];\r\n                            e.data[i][1].imgidx = e.data[i][2];\r\n                            originCanvas.vars.imgs_lightness[lightness].push(e.data[i][1]);\r\n                            let curSize = originCanvas.vars.imgs_lightness[lightness].length;\r\n                            if (curSize >= originCanvas.consts.nOfSameLightnessImgs) {\r\n                                originCanvas.consts.renderLightness(lightness);\r\n                            }\r\n                        }\r\n                    }\r\n                    for (let i = 0; i < 4; i++) {\r\n                        calLiWorker.postMessage([imgDatas[i], idx + i / 10]);\r\n                    }\r\n                }\r\n                images[e.target.idx].tmpimg.onload = null;\r\n                images[e.target.idx].tmpimg = null;\r\n            };\r\n\r\n            for (let idx = 0; idx < images.length / 2; idx++) {\r\n                let tmpimg = new Image();\r\n                tmpimg.crossOrigin = \"Anonymous\";\r\n                tmpimg.idx = idx;\r\n                tmpimg.addEventListener(\"load\", onloadhandler, { once: true });\r\n                tmpimg.src = images[idx].thumbnailUrl + \"&w=100&h=100&c=7\";\r\n                images[idx].tmpimg = tmpimg;\r\n            }\r\n            //정보 보여주는 팝업창을 띄우기\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        canvasRef.current.addEventListener('wheel', preventDefault);\r\n        canvasRef.current.addEventListener('touchmove', preventDefault);\r\n        return () => {\r\n            originCanvas.delete();\r\n            myc.delete();\r\n        }\r\n    }, []);\r\n\r\n    const onWheelhandler = (e) => {\r\n        let x = e.pageX - canvasRef.current.offsetLeft;\r\n        let y = e.pageY - canvasRef.current.offsetTop;\r\n        if (e.deltaY > 0) {\r\n            myc.consts.zoom(x, y, -0.1);\r\n        } else if (e.deltaY < 0) {\r\n            myc.consts.zoom(x, y, 0.1);\r\n        }\r\n    }\r\n\r\n    let isMoved = false;\r\n    let prev = [];\r\n    let downpos = [];\r\n    const onmove = (e) => {\r\n        let x, y;\r\n        if (e.touches) {\r\n            props.hide();\r\n            if (prev.length >= 2) {\r\n                let dx = prev[0].pageX - prev[1].pageX;\r\n                let dy = prev[0].pageY - prev[1].pageY;\r\n                let midx = (prev[0].pageX + prev[1].pageX) / 2 - canvasRef.current.offsetLeft;\r\n                let midy = (prev[0].pageY + prev[1].pageY) / 2 - canvasRef.current.offsetTop;\r\n                let prevDiff = Math.sqrt(dx * dx + dy * dy);\r\n                for (let i = 0; i < e.changedTouches.length; i++) {\r\n                    if (prev[0].identifier == e.changedTouches[i].identifier) {\r\n                        prev[0] = e.changedTouches[i];\r\n                    } else {\r\n                        prev[1] = e.changedTouches[i];\r\n                    }\r\n                }\r\n                dx = prev[0].pageX - prev[1].pageX;\r\n                dy = prev[0].pageY - prev[1].pageY;\r\n                let curDiff = Math.sqrt(dx * dx + dy * dy);\r\n                let diff = curDiff - prevDiff;\r\n                if (prevDiff) {\r\n                    myc.consts.zoom(midx, midy, diff / canvasRef.current.clientWidth)\r\n                }\r\n                return;\r\n            } else {\r\n                x = e.touches[0].pageX;\r\n                y = e.touches[0].pageY;\r\n                e.movementX = x - prev[0].pageX\r\n                e.movementY = y - prev[0].pageY;\r\n                prev[0] = e.touches[0];\r\n            }\r\n        } else {\r\n            x = e.pageX - canvasRef.current.offsetLeft;\r\n            y = e.pageY - canvasRef.current.offsetTop;\r\n        }\r\n        myc.consts.emp(x, y);\r\n        myc.consts.move(e.movementX, e.movementY);\r\n    }\r\n\r\n    const onClickhandler = (e) => {\r\n        if (isMoved) return;\r\n        let x = e.pageX - canvasRef.current.offsetLeft;\r\n        let y = e.pageY - canvasRef.current.offsetTop;\r\n        myc.consts.click(x, y);\r\n    }\r\n    const ondown = (e) => {\r\n        if (e.touches) {\r\n            if (prev.length > 2) return;\r\n\r\n            prev.push(e.touches[0]);\r\n        } else {\r\n            downpos = [e.clientX, e.clientY];\r\n        }\r\n        myc.vars.canMove = true;\r\n    }\r\n    const onup = (e) => {\r\n        if (e.touches) {\r\n            prev = [];\r\n            /*\r\n            for (var i = 0; i < prev.length; i++) {\r\n                if (prev[i].identifier == e.changedTouches[0].identifier) {\r\n                    prev.splice(i, 1);\r\n                    break;\r\n                }\r\n            }     */\r\n        } else {\r\n            let d = e.clientX - downpos[0];\r\n            d += e.clientY - downpos[1];\r\n            isMoved = !!d;\r\n        }\r\n        myc.vars.canMove = false;\r\n    }\r\n    const mouseLeave = (e) => {\r\n        myc.vars.canMove = false;\r\n    }\r\n    const onImageLoaded = (e) => {\r\n        myc.canRender = false;\r\n        myc.canAnimRun = false;\r\n        originCanvas.renderPicture(originCanvasRef.current);\r\n        myc.animStart(canvasRef.current);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img className={styles.dispNone} ref={bgImgRef} onLoad={onImageLoaded}></img>\r\n            <canvas className={styles.width100} ref={canvasRef} width={canvasSize} height={canvasSize}\r\n                onClick={onClickhandler}\r\n                onWheel={onWheelhandler}\r\n                onMouseMove={onmove}\r\n                onMouseDown={ondown}\r\n                onMouseUp={onup}\r\n                onMouseLeave={mouseLeave}\r\n                onTouchStart={ondown}\r\n                onTouchMove={onmove}\r\n                onTouchEnd={onup}\r\n            >\r\n                이 브라우저는 캔버스를 지원하지 않습니다.\r\n            </canvas>\r\n            <canvas className={styles.dispNone} ref={tmpCanvasRef} width=\"100\" height=\"100\">\r\n            </canvas>\r\n            <canvas className={styles.dispNone} ref={originCanvasRef} width=\"100\" height=\"100\">\r\n            </canvas>\r\n        </>\r\n\r\n    );\r\n});\r\n\r\nexport default Mosaic;","import React, { useEffect, useRef } from 'react';\r\nimport styles from './PopUp.module.css';\r\nfunction PopUp(props) {\r\n    let abs;\r\n    if (props.imageInfo !== null) {\r\n        abs = {\r\n            position: 'absolute',\r\n            left: `${props.imageInfo.popUpPos[0]}px`,\r\n            top: `${props.imageInfo.popUpPos[1]}px`,\r\n            width: `${props.imageInfo.popUpSize}px`,\r\n            height: `${props.imageInfo.popUpSize}px`,\r\n        };\r\n    }\r\n    debugger;\r\n    /*{\r\n      popUpSize : popUpSize,\r\n      popUpPos : popUpPos,\r\n      imageId : imageInfo.imageId,\r\n      name: imageInfo.name,\r\n      thumbnail: imageInfo.thumbnail,\r\n      thumbnailUrl: imageInfo.thumbnailUrl,\r\n      webSearchUrl: imageInfo.webSearchUrl,                        \r\n    }*/\r\n    return (\r\n        <>\r\n            {props.imageInfo &&\r\n                <div className={styles.line} style={abs} onMouseLeave={props.hide}>\r\n                    <a\r\n                        href={props.imageInfo.webSearchUrl}\r\n                        target='_blank'\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <img\r\n                            className={styles.width100}\r\n                            src={props.imageInfo.thumbnailUrl + `&w=${props.imageInfo.popUpSize}&h=${props.imageInfo.popUpSize}&c=7`}\r\n                            alt={props.imageInfo.name}\r\n                        />\r\n                    </a>\r\n\r\n\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PopUp;","import React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, NavLink, Link, Switch } from \"react-router-dom\";\r\nimport styles from './index.module.css';\r\nimport Mosaic from './Mosaic'\r\nimport PopUp from './PopUp'\r\n\r\nclass Main extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { popUpInfo: null, todayPersonMessage: \"\" };\r\n\t\tthis.popUp = this.popUp.bind(this);\r\n\t\tthis.hide = this.hide.bind(this);\r\n\t\tthis.setTodayPersonMsg = this.setTodayPersonMsg.bind(this);\r\n\t}\r\n\tpopUp(popUpInfo) {\r\n\t\tif (popUpInfo === null) {\r\n\t\t\tthis.hide();\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tpopUpInfo: popUpInfo\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\thide() {\r\n\t\tthis.setState({\r\n\t\t\tpopUpInfo: null\r\n\t\t});\r\n\t}\r\n\r\n\tsetTodayPersonMsg(msg) {\r\n\t\tthis.setState({\r\n\t\t\ttodayPersonMessage: msg\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<h1>오늘의 인물은... {this.state.todayPersonMessage}</h1>\r\n\t\t\t\t\t<span className={styles.noti + \" material-icons-outlined\"}>\r\n\t\t\t\t\t\t<div><a href=\"https://www.bigkinds.or.kr/\" target='_blank' rel=\"noreferrer\">빅카인즈(Big kinds)</a>에서 제공하는 '오늘의 키워드'의 인물 키워드 중에서 오늘자 뉴스에서 가장 많이 언급된 인물입니다.</div>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div className={styles.container}>\r\n\r\n\t\t\t\t\t<main>\r\n\t\t\t\t\t\t<Mosaic popUp={this.popUp} hide={this.hide} setTodayPersonMsg={this.setTodayPersonMsg} />\r\n\t\t\t\t\t</main>\r\n\t\t\t\t\t<PopUp imageInfo={this.state.popUpInfo} hide={this.hide}></PopUp>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass App extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path='/99-interactions' component={Main} />\r\n\t\t\t\t\t\t<Route path='*'>\r\n\t\t\t\t\t\t\t없음\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t\t<footer>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tcontact : <a href=\"mailto: iginganza@gmail.com\" title=\"iginganza@gmail.com\">iginganza@gmail.com</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</footer>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}