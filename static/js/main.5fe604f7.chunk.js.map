{"version":3,"sources":["index.module.css","Mosaic.module.css","PopUp.module.css","Spinner.module.css","greyScaleMaker.js","lib/MyCanvas.js","Mosaic.js","PopUp.js","Spinner.js","index.js"],"names":["module","exports","code","onmessage","e","imgData","data","imagedata","pixels","Uint8ClampedArray","lightness","cnt","i","length","li","parseInt","set","postMessage","Math","round","imgidx","imageData","toString","substring","indexOf","lastIndexOf","blob","Blob","type","worker_script","URL","createObjectURL","MyCanvas","options","default_args","index","this","vars","consts","simulate","render","init","_delete","delete","simulResult","_prevSResult","lastReq","canAnimRun","canRender","_canvas","_init","renderFrame","canvas","context","getContext","timestamp","requestAnimationFrame","bind","clearRect","width","height","_simulate","cancelAnimationFrame","param","console","assert","beginPath","moveTo","forEach","element","lineTo","closePath","style","fillStyle","fill","rgb","v","max","c","min","h","hsv","f","n","k","array","res","ImageData","image","sx","sy","sw","sh","dx","dy","dw","dh","abs","x1","x2","y1","y2","w_ratio","h_ratio","MosaicSize","NumOfPixel","canvasSize","MosaicInfo","bannedList","Set","imageIdx","shuffle","randomIndex","currentIndex","floor","random","Mosaic","React","memo","props","canvasRef","useRef","originCanvasRef","tmpCanvasRef","bgImgRef","bgImg","images","fetch","method","then","json","imgInfos","value","current","crossOrigin","src","thumbnailUrl","setTodaySong","todaySong","preventDefault","myc","setPos","pos","zoom","posX","posY","d","ratioX","ratioY","zoomScale","prevSize","originSize","maxZoomScale","viewportSize","preva","prevb","cura","curb","getClampVal","posToIdx","clientWidth","click","x","curHoveredPos","y","originCanvas","numOfColPixel","numOfRowPixel","mosaicInfo","toCanvasCoeff","idxc","idxr","dc","dr","curMosaicSize","popUpSize","popUpPos","offsetLeft","offsetTop","imageInfo","popUp","imageId","name","thumbnail","webSearchUrl","emp","move","isInit","canMove","ratioW","ratioH","radioOfPic","renderedPixel","picPos","zeroX","zeroY","viewportSizeForPic","hoverLineSize","hoveredPos","slice","drawImage","getSafeRect","stroke","globalAlpha","selectUsableImg","cur","candis","has","push","drawRemain","curPosArray","pos_lightness","imgs_lightness","candiImageInfo","lightnessMul","lightnessAdd","putImageData","j","add","usingImageSize","Array","map","base","imgLoadCounter","strokeStyle","w","renderedW","renderedH","tmpctx","getImageData","curPixel","fillRect","onloadhandler","target","imgDatas","idx","greyScaleMaker","Worker","GreyScaleMaker","posArr","curidx","last","pop","onerrorhandler","tmpimg","Image","onload","onerror","useEffect","addEventListener","isMoved","prev","downpos","onmove","touches","hide","pageX","pageY","midx","midy","prevDiff","sqrt","changedTouches","identifier","diff","movementX","movementY","ondown","clientX","clientY","onup","className","styles","dispNone","ref","onLoad","setImageLoaded","renderPicture","animStart","alt","width100","onClick","onWheel","deltaY","onMouseMove","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","PopUp","position","left","top","popUpContainer","href","rel","title","thumbnailImg","Spinner","spinnerWrapper","isDarkMode","spinner","defaultProps","Main","state","popUpInfo","imageLoaded","setState","msg","container","photoinfo","noti","photomosaic","Component","App","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5fe604f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"noti\":\"src_noti__1YoO6\",\"photoinfo\":\"src_photoinfo__vd3CI\",\"photomosaic\":\"src_photomosaic__BBxxp\",\"container\":\"src_container__2CCsS\",\"linkActive\":\"src_linkActive__1RTXz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"width100\":\"Mosaic_width100__S9aJL\",\"widthS\":\"Mosaic_widthS__1Cwbq\",\"dispNone\":\"Mosaic_dispNone__1AiSt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PopUp_block__1nSDr\",\"dispNone\":\"PopUp_dispNone__1cfJR\",\"popUpContainer\":\"PopUp_popUpContainer__3ffK3\",\"thumbnailImg\":\"PopUp_thumbnailImg__1WL9N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__3cTx6\",\"spinnerWrapper--darkmode\":\"Spinner_spinnerWrapper--darkmode__1o2x3\",\"spinner\":\"Spinner_spinner__16M6Q\",\"rotate\":\"Spinner_rotate__3-6Yj\"};","const workercode = () => {\r\n    onmessage = function (e) {\r\n        let imgData = e.data.imagedata;\r\n        let pixels = new Uint8ClampedArray(imgData.data);\r\n        let lightness = 0;\r\n        let cnt = 0;\r\n        for (let i = 0; i < pixels.length; i += 4) {\r\n            let li = parseInt((3 * pixels[i] + 4 * pixels[i + 1] + pixels[i + 2]) >>> 3);\r\n            pixels[i] = li;\r\n            pixels[i + 1] = li;\r\n            pixels[i + 2] = li;\r\n            lightness += li;\r\n            cnt++;\r\n        }\r\n        imgData.data.set(pixels);\r\n\r\n        postMessage({\r\n            lightness: Math.round(lightness / cnt),\r\n            imgidx: e.data.imgidx,\r\n            imageData: imgData\r\n        });\r\n    }\r\n};\r\n\r\nlet code = workercode.toString();\r\ncode = code.substring(code.indexOf(\"{\") + 1, code.lastIndexOf(\"}\"));\r\n\r\nconst blob = new Blob([code], { type: \"application/javascript\" });\r\nconst worker_script = URL.createObjectURL(blob);\r\n\r\nmodule.exports = worker_script;","export class MyCanvas{\r\n  constructor(options){    \r\n    var default_args = {\r\n      'vars'       :   null,\r\n      'consts'     :   null,\r\n      'simulate'   :   ()=>{},\r\n      'render'     :   ()=>{},\r\n      'init'       :   ()=>{},\r\n      'delete'     :   ()=>{},\r\n    }\r\n    for (var index in default_args) {\r\n        if (typeof options[index] == \"undefined\") options[index] = default_args[index];\r\n    }\r\n    this.vars = options.vars;\r\n    this.consts = options.consts;\r\n    this.simulate = options.simulate;\r\n    this.render = options.render;\r\n    this.init = options.init;\r\n    this._delete = options.delete;\r\n    this.simulResult = null;\r\n    this._prevSResult = null;\r\n    this.lastReq = null;\r\n    this.canAnimRun = true;\r\n    this.canRender = true;\r\n  }\r\n  \r\n  animStart(_canvas){\r\n    this._init(_canvas);\r\n    this.renderFrame();\r\n  }\r\n  _init(_canvas){\r\n    this.canvas = _canvas;\r\n    this.context = _canvas.getContext('2d');\r\n    this.init();\r\n  }\r\n  renderFrame(timestamp){   \r\n    this.lastReq = requestAnimationFrame(this.renderFrame.bind(this));\r\n    if(!this.canAnimRun) return;    \r\n    this.context.clearRect(0, 0, this.canvas.width,  this.canvas.height);\r\n    this._simulate(timestamp);\r\n    if(!this.canRender) return;\r\n    this.render(timestamp);\r\n    \r\n  }\r\n  renderPicture(_canvas){\r\n    this._init(_canvas);\r\n    if(!this.canRender) return;\r\n    this.context.clearRect(0, 0, this.canvas.width,  this.canvas.height);\r\n    this.render();\r\n  }\r\n  _simulate(timestamp){\r\n    this.simulate(timestamp);\r\n  }\r\n  delete(){\r\n    cancelAnimationFrame(this.lastReq);\r\n    this._delete();\r\n  }\r\n  drawPolygon(param){\r\n    console.assert(param && param.length > 2, \"다각형을 구성하는 점이 너무 작습니다.\");\r\n    this.context.beginPath();\r\n    this.context.moveTo(param[0][0], param[0][1]);\r\n    param.forEach(element => {\r\n      this.context.lineTo(element[0],element[1]);\r\n    });\r\n    this.context.closePath();\r\n  }\r\n  fill(style){\r\n    this.context.fillStyle = style;\r\n    this.context.fill();\r\n  }\r\n  static rgb2hsv(rgb) {\r\n    let v = Math.max(rgb[0],rgb[1],rgb[2]), c = v-Math.min(rgb[0],rgb[1],rgb[2]);\r\n    let h = c && ((v===rgb[0]) ? (rgb[1]-rgb[2])/c : ((v===rgb[1]) ? 2+(rgb[2]-rgb[0])/c : 4+(rgb[0]-rgb[1])/c)); \r\n    return [Math.round(60*(h<0?h+6:h)), v&&c/v, v];\r\n  }\r\n  static hsv2rgb(hsv){                            \r\n    let f = (n,k=(n+hsv[0]/60)%6) => hsv[2] - hsv[2]*hsv[1]*Math.max( Math.min(k,4-k,1), 0);     \r\n    return [f(5),f(3),f(1)];       \r\n  }\r\n  static getGreyScale(imgData){\r\n    let array = imgData;\r\n    if(array.data) array = array.data;\r\n    return parseInt((3*array[0] + 4*array[1] + array[2]) >>> 3);\r\n  }\r\n  static lightnessMul(imgData,k){\r\n    let res = new ImageData(imgData.width,imgData.height);\r\n    var pixels = new Uint8ClampedArray(imgData.data);\r\n    for (var i = 0; i < pixels.length; i += 4) {\r\n      pixels[i] *= k;\r\n      pixels[i + 1] *= k;\r\n      pixels[i + 2] *= k;\r\n    }\r\n    res.data.set(pixels);\r\n    return res;\r\n  }\r\n  static lightnessAdd(imgData,k){\r\n    let res = new ImageData(imgData.width,imgData.height);\r\n    var pixels = new Uint8ClampedArray(imgData.data);\r\n    for (var i = 0; i < pixels.length; i += 4) {\r\n      pixels[i] += k;\r\n      pixels[i + 1] += k;\r\n      pixels[i + 2] += k;\r\n    }\r\n    res.data.set(pixels);\r\n    return res;\r\n  }\r\n  static img2greyScale(imgData){\r\n    let pixels = imgData.data;\r\n    for (var i = 0; i < pixels.length; i += 4) {\r\n        let lightness = parseInt((3*pixels[i] + 4*pixels[i + 1] + pixels[i + 2]) >>> 3);\r\n        pixels[i] = lightness;\r\n        pixels[i + 1] = lightness;\r\n        pixels[i + 2] = lightness;\r\n    }\r\n    return imgData;\r\n  }\r\n\r\n  static getSafeRect( image, sx, sy, sw, sh, dx, dy, dw, dh ) {  \r\n    const { width, height } = image;    \r\n    if( sw < 0 ) {\r\n      sx += sw;\r\n      sw = Math.abs( sw );\r\n    }\r\n    if( sh < 0 ) {\r\n      sy += sh;\r\n      sh = Math.abs( sh );\r\n    }\r\n    if( dw < 0 ) {\r\n      dx += dw;\r\n      dw = Math.abs( dw );\r\n    }\r\n    if( dh < 0 ) {\r\n      dy += dh;\r\n      dh = Math.abs( dh );\r\n    }\r\n    const x1 = Math.max( sx, 0 );\r\n    const x2 = Math.min( sx + sw, width );\r\n    const y1 = Math.max( sy, 0 );\r\n    const y2 = Math.min( sy + sh, height );\r\n    const w_ratio = dw / sw;\r\n    const h_ratio = dh / sh;\r\n\r\n    return [\r\n      image,\r\n      x1,\r\n      y1,\r\n      x2 - x1,\r\n      y2 - y1,\r\n      sx < 0 ? dx - (sx * w_ratio) : dx,\r\n      sy < 0 ? dy - (sy * h_ratio) : dy,\r\n      (x2 - x1) * w_ratio,\r\n      (y2 - y1) * h_ratio\r\n    ];\r\n  }\r\n}  ","import React, { useEffect, useRef } from 'react';\r\nimport { MyCanvas } from './lib/MyCanvas';\r\nimport GreyScaleMaker from \"./greyScaleMaker\";\r\n\r\nimport styles from './Mosaic.module.css';\r\n\r\n\r\nconst MosaicSize = 50;\r\nconst NumOfPixel = 150;\r\nconst canvasSize = 800;\r\nclass MosaicInfo {\r\n    constructor() {\r\n        this.bannedList = new Set();\r\n        this.imageIdx = null;\r\n    }\r\n};\r\nconst shuffle = (array) => {\r\n    var currentIndex = array.length, randomIndex;\r\n    while (0 !== currentIndex) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\r\n    }\r\n    return array;\r\n}\r\n\r\nconst Mosaic = React.memo((props) => {\r\n    let canvasRef = useRef(null);\r\n    let originCanvasRef = useRef(null);\r\n    let tmpCanvasRef = useRef(null);\r\n    let bgImgRef = useRef(null);\r\n    let bgImg = {};\r\n    let images = [];\r\n    fetch(\"https://99-interactions-functions.azurewebsites.net/api/HttpTrigger1?code=gyPykVBnZ5lSl3vwOm3BvEojwZolAbHSuujci28YxApqalzrA2rHfw==\", {\r\n        method: 'GET',\r\n    }).then(res =>\r\n        res.json()\r\n    )\r\n        .then(json => {\r\n            images = json.imgInfos.value;\r\n            bgImgRef.current.crossOrigin = \"Anonymous\";\r\n            bgImgRef.current.src = images[0].thumbnailUrl + \"&c=7&p=0\";\r\n            props.setTodaySong(json.todaySong);\r\n        });\r\n    const preventDefault = e => e.preventDefault();\r\n    let myc = new MyCanvas({\r\n        consts: {\r\n            setPos: (dx, dy) => {\r\n                myc.vars.pos[0] += dx;\r\n                myc.vars.pos[1] += dy;\r\n                myc.vars.pos[2] += dx;\r\n                myc.vars.pos[3] += dy;\r\n            },\r\n            zoom: (posX, posY, d) => {\r\n                let ratioX = posX / canvasSize;\r\n                let ratioY = posY / canvasSize;\r\n                d *= myc.vars.zoomScale;\r\n                let prevSize = myc.vars.originSize / myc.vars.zoomScale;\r\n                myc.vars.zoomScale = Math.min(myc.vars.maxZoomScale, Math.max(1, myc.vars.zoomScale + d));\r\n                let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n\r\n                let preva = prevSize * ratioX;\r\n                let prevb = prevSize * ratioY;\r\n                let cura = viewportSize * ratioX;\r\n                let curb = viewportSize * ratioY;\r\n                let [dx, dy] = myc.consts.getClampVal(cura - preva, curb - prevb);\r\n\r\n                myc.consts.setPos(dx, dy);\r\n            },\r\n            posToIdx: (posX, posY) => {\r\n                let ratioX = posX / canvasRef.current.clientWidth;\r\n                let ratioY = posY / canvasRef.current.clientWidth;\r\n                let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n                let dx = viewportSize * ratioX;\r\n                let dy = viewportSize * ratioY;\r\n\r\n                let idxC = Math.floor((-myc.vars.pos[0] + dx) / MosaicSize);\r\n                let idxR = Math.floor((-myc.vars.pos[1] + dy) / MosaicSize);\r\n                return [idxC, idxR];\r\n            },\r\n            click: (posX, posY) => {\r\n                let x = myc.vars.curHoveredPos[0];\r\n                let y = myc.vars.curHoveredPos[1];\r\n                if (0 <= x && x < originCanvas.vars.numOfColPixel && 0 <= y && y < originCanvas.vars.numOfRowPixel\r\n                    && originCanvas.vars.mosaicInfo[y][x].imageIdx !== null) {\r\n                    //현재 마우스 포인터가 캔버스 기준으로\r\n                    //현재 인덱스는 캔버스 기준으로 바꾸면 좌상단이 몇몇인가?\r\n                    let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n                    let toCanvasCoeff = canvasRef.current.clientWidth / viewportSize;\r\n                    let idxc = x * MosaicSize * toCanvasCoeff;\r\n                    let idxr = y * MosaicSize * toCanvasCoeff;\r\n                    let zeroc = myc.vars.pos[0] * toCanvasCoeff;\r\n                    let zeror = myc.vars.pos[1] * toCanvasCoeff;\r\n                    idxc += zeroc;\r\n                    idxr += zeror;\r\n\r\n                    //좌상단과 현재 마우스 포인터를 비교해서 모자이크에서 얼마만큼 갔고 얼마만큼 남았나 \r\n                    let dc = posX - idxc;\r\n                    let dr = posY - idxr;\r\n                    let curMosaicSize = MosaicSize * toCanvasCoeff;\r\n\r\n\r\n                    let popUpSize = Math.floor(canvasRef.current.clientWidth / 2 - curMosaicSize);\r\n                    let popUpPos = [0, 0];\r\n                    if (posX > canvasRef.current.clientWidth / 2) popUpPos[0] = posX + (curMosaicSize - dc) - popUpSize;\r\n                    else popUpPos[0] = (posX - dc);\r\n                    if (posY > canvasRef.current.clientWidth / 2) popUpPos[1] = posY + (curMosaicSize - dr) - popUpSize;\r\n                    else popUpPos[1] = (posY - dr);\r\n                    popUpPos[0] = Math.min(canvasRef.current.clientWidth - popUpSize, Math.max(0, popUpPos[0])) + canvasRef.current.offsetLeft;\r\n                    popUpPos[1] = Math.min(canvasRef.current.clientWidth - popUpSize, Math.max(0, popUpPos[1])) + canvasRef.current.offsetTop;\r\n                    let imageIdx = originCanvas.vars.mosaicInfo[y][x].imageIdx;\r\n                    let imageInfo = images[Math.floor(imageIdx)];\r\n                    props.popUp({\r\n                        popUpSize: popUpSize,\r\n                        popUpPos: popUpPos,\r\n                        imageId: imageInfo.imageId,\r\n                        name: imageInfo.name,\r\n                        thumbnail: imageInfo.thumbnail,\r\n                        thumbnailUrl: imageInfo.thumbnailUrl,\r\n                        webSearchUrl: imageInfo.webSearchUrl,\r\n                    });\r\n                } else {\r\n                    props.popUp(null);\r\n                }\r\n            },\r\n            emp: (posX, posY) => {\r\n                let pos = myc.consts.posToIdx(posX, posY);\r\n                if (0 <= pos[0] && pos[0] < originCanvas.vars.numOfColPixel\r\n                    && 0 <= pos[1] && pos[1] < originCanvas.vars.numOfRowPixel) {\r\n                    myc.vars.curHoveredPos = pos;\r\n                } else {\r\n                    myc.vars.curHoveredPos = [-100, -100];\r\n                }\r\n\r\n            },\r\n            move: (dx, dy) => {\r\n                if (!myc.vars.isInit || !myc.vars.canMove) return;\r\n                dx = dx * 10 / myc.vars.zoomScale;\r\n                dy = dy * 10 / myc.vars.zoomScale;\r\n                [dx, dy] = myc.consts.getClampVal(dx, dy);\r\n\r\n                myc.consts.setPos(dx, dy);\r\n            },\r\n            getClampVal: (x, y) => {\r\n                let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n                //원본크기가 뷰포트사이즈보다 같거나 작을때\r\n                if (viewportSize >= myc.vars.originSize * myc.vars.ratioW) {\r\n                    x = Math.max(-myc.vars.pos[0], x);//최소를 정함\r\n                    x = Math.min(viewportSize - myc.vars.pos[2], x);//최대를 정함\r\n                } else {\r\n                    x = Math.max(viewportSize - myc.vars.pos[2], x);//최소를 정함\r\n                    x = Math.min(-myc.vars.pos[0], x);//최대를 정함\r\n                }\r\n                if (viewportSize >= myc.vars.originSize * myc.vars.ratioH) {\r\n                    y = Math.max(-myc.vars.pos[1], y);\r\n                    y = Math.min(viewportSize - myc.vars.pos[3], y);\r\n                } else {\r\n                    y = Math.max(viewportSize - myc.vars.pos[3], y);\r\n                    y = Math.min(-myc.vars.pos[1], y);\r\n                }\r\n                return [x, y];\r\n            }\r\n        },\r\n        vars: {\r\n            zoomScale: 1,\r\n            pos: [0, 0, 0, 0],\r\n            curHoveredPos: [-10, -10],\r\n            isInit: false,\r\n            maxZoomScale: 1,\r\n            originSize: 1000,\r\n            canMove: false,\r\n            ratioW: 1,\r\n            ratioH: 1,\r\n            radioOfPic: 1,\r\n        },\r\n        init: () => {\r\n            myc.vars.originSize = originCanvas.canvas.width > originCanvas.canvas.height ? originCanvas.canvas.width : originCanvas.canvas.height;\r\n            myc.vars.ratioW = originCanvas.canvas.width / myc.vars.originSize;\r\n            myc.vars.ratioH = originCanvas.canvas.height / myc.vars.originSize;\r\n            myc.vars.pos[0] = myc.vars.originSize * (1 - myc.vars.ratioW) / 2;\r\n            myc.vars.pos[1] = myc.vars.originSize * (1 - myc.vars.ratioH) / 2;\r\n            myc.vars.pos[2] = myc.vars.pos[0] + myc.vars.originSize * myc.vars.ratioW;\r\n            myc.vars.pos[3] = myc.vars.pos[1] + myc.vars.originSize * myc.vars.ratioH;\r\n            myc.vars.maxZoomScale = myc.vars.originSize * (100 / MosaicSize) / canvasSize;\r\n            myc.vars.radioOfPic = bgImg.renderedPixel / myc.vars.originSize;\r\n            let d = myc.vars.pos[0] + myc.vars.pos[1];\r\n            if (d > canvasSize / 8) {\r\n                myc.consts.zoom(canvasSize / 2, canvasSize / 2, myc.vars.originSize / (myc.vars.originSize - 1.7 * d) - 1);\r\n            }\r\n\r\n            myc.vars.isInit = true;\r\n\r\n        },\r\n        simulate: () => {\r\n            let viewportSize = myc.vars.originSize / myc.vars.zoomScale;\r\n            let picPos = [-bgImg.zeroX + myc.vars.pos[0] * myc.vars.radioOfPic, -bgImg.zeroY + myc.vars.pos[1] * myc.vars.radioOfPic];\r\n            let viewportSizeForPic = bgImg.renderedPixel / myc.vars.zoomScale;\r\n            let hoverLineSize = MosaicSize * canvasSize / viewportSize;\r\n            let hoveredPos = myc.vars.curHoveredPos.slice();\r\n            hoveredPos[0] = hoveredPos[0] * MosaicSize + myc.vars.pos[0];\r\n            hoveredPos[1] = hoveredPos[1] * MosaicSize + myc.vars.pos[1];\r\n            hoveredPos[0] *= canvasSize / viewportSize;\r\n            hoveredPos[1] *= canvasSize / viewportSize;\r\n            myc.simulResult = {\r\n                viewportSize: viewportSize,\r\n                pos: myc.vars.pos,\r\n                picPos: picPos,\r\n                viewportSizeForPic: viewportSizeForPic,\r\n                hoveredPos: hoveredPos,\r\n                hoverLineSize: hoverLineSize,\r\n            };\r\n        },\r\n        render: () => {\r\n            //그리기\r\n            let res = myc.simulResult;\r\n            myc.context.drawImage(...MyCanvas.getSafeRect(originCanvas.canvas,\r\n                -res.pos[0], -res.pos[1], res.viewportSize, res.viewportSize,\r\n                0, 0, canvasSize, canvasSize));\r\n            myc.context.beginPath();\r\n            myc.context.lineTo(res.hoveredPos[0], res.hoveredPos[1]);\r\n            myc.context.lineTo(res.hoveredPos[0] + res.hoverLineSize, res.hoveredPos[1]);\r\n            myc.context.lineTo(res.hoveredPos[0] + res.hoverLineSize, res.hoveredPos[1] + res.hoverLineSize);\r\n            myc.context.lineTo(res.hoveredPos[0], res.hoveredPos[1] + res.hoverLineSize);\r\n            myc.context.closePath();\r\n            myc.context.stroke();\r\n\r\n            myc.context.globalAlpha = 0.25;\r\n            myc.context.drawImage(...MyCanvas.getSafeRect(bgImgRef.current,\r\n                -res.picPos[0], -res.picPos[1], res.viewportSizeForPic, res.viewportSizeForPic,\r\n                0, 0, canvasSize, canvasSize));\r\n            myc.context.globalAlpha = 1;\r\n        },\r\n    });\r\n\r\n    let originCanvas = new MyCanvas({\r\n        consts: {\r\n            selectUsableImg: (cur, images) => {\r\n                //사용가능한 이미지를 랜덤하게 고른다\r\n                let candis = [];\r\n                for (let i in images) {\r\n                    let imgidx = images[i][1];\r\n                    if (!cur.bannedList.has(imgidx)) {\r\n                        candis.push(i);\r\n                    }\r\n                }\r\n                if (candis.length === 0) return null;\r\n                let randomIndex = Math.floor(Math.random() * candis.length);\r\n                return images[candis[randomIndex]];\r\n            },\r\n            drawRemain: () => {\r\n                for (let lightness = 5; lightness < 245; lightness++) {\r\n                    let curPosArray = originCanvas.vars.pos_lightness[lightness];\r\n                    let imgs_lightness = originCanvas.vars.imgs_lightness;\r\n                    let images = [];\r\n                    for (let pos of curPosArray) {\r\n                        let mosaicInfo = originCanvas.vars.mosaicInfo;\r\n                        let cur = mosaicInfo[pos[1]][pos[0]];\r\n                        let d = 1;\r\n                        //images에 있는 것 중 사용 할 수 있는 것이 있다면 선택\r\n                        let imageInfo = originCanvas.consts.selectUsableImg(cur, images);\r\n                        //없으면 사용가능하며, 가장 밝기가 비슷한 이미지를 찾고 같은 밝기로 만들기\r\n                        while (!imageInfo) {\r\n                            let candiImageInfo = null;\r\n                            if (lightness + d < 255) {\r\n                                candiImageInfo = originCanvas.consts.selectUsableImg(cur, imgs_lightness[lightness + d]);\r\n                            }\r\n                            if (!candiImageInfo && lightness - d > 0) {\r\n                                candiImageInfo = originCanvas.consts.selectUsableImg(cur, imgs_lightness[lightness - d]);\r\n                            }\r\n                            if (candiImageInfo) {\r\n                                imageInfo = [0, candiImageInfo[1]];\r\n                                if (d > 0) {\r\n                                    imageInfo[0] = MyCanvas.lightnessMul(candiImageInfo[0], lightness / (lightness + d));\r\n                                } else {\r\n                                    imageInfo[0] = MyCanvas.lightnessAdd(candiImageInfo[0], -d);\r\n                                }\r\n                                images.push(imageInfo);\r\n                            }\r\n                            d++;\r\n                        }\r\n\r\n                        cur.imageIdx = imageInfo[1];\r\n                        originCanvas.context.putImageData(imageInfo[0], pos[0] * MosaicSize, pos[1] * MosaicSize);\r\n\r\n                        //주변에 이 사진은 쓰지 말라고 표시함\r\n                        for (let i = -2; i <= 2; i++) {\r\n                            for (let j = -2; j <= 2; j++) {\r\n                                let x = pos[0] + i, y = pos[1] + j;\r\n                                if (mosaicInfo[y] && mosaicInfo[y][x]) {\r\n                                    mosaicInfo[y][x].bannedList.add(cur.imageIdx);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            usingImageSize: 100,\r\n        },\r\n        vars: {\r\n            pos_lightness: new Array(256).fill(null).map(() => []),\r\n            imgs_lightness: new Array(256).fill(null).map(() => []),\r\n            base: 0,\r\n            numOfColPixel: 0,\r\n            numOfRowPixel: 0,\r\n            mosaicInfo: null,\r\n            imgLoadCounter: 0,\r\n        },\r\n        init: () => {\r\n            //w, h 중 큰 것을 NumOfPixel개 로 나눠서 base를 구하고 base x base 크기의 정사각형으로 모자이크를 구성한다. \r\n            originCanvas.context.strokeStyle = 'rgba(0, 0, 0, 0)';\r\n            let w = bgImgRef.current.width;\r\n            let h = bgImgRef.current.height;\r\n            let base, numOfRowPixel, numOfColPixel;\r\n            if (w >= h) {\r\n                base = w / NumOfPixel;\r\n                numOfRowPixel = parseInt(h / base);\r\n                h = numOfRowPixel * base;\r\n                numOfColPixel = NumOfPixel;\r\n            } else {\r\n                base = h / NumOfPixel;\r\n                numOfColPixel = parseInt(w / base);\r\n                w = numOfColPixel * base;\r\n                numOfRowPixel = NumOfPixel;\r\n            }\r\n\r\n            originCanvas.vars.mosaicInfo = new Array(numOfRowPixel);\r\n            for (var i = 0; i < numOfRowPixel; i++) {\r\n                originCanvas.vars.mosaicInfo[i] = new Array(numOfColPixel).fill(null).map(() => new MosaicInfo());\r\n            }\r\n            //배경 이미지 로드 및 관련 정보 초기화\r\n            bgImg.renderedW = w;\r\n            bgImg.renderedH = h;\r\n            bgImg.zeroX = (bgImgRef.current.width - bgImg.renderedW) / 2;\r\n            bgImg.zeroY = (bgImgRef.current.height - bgImg.renderedH) / 2;\r\n            bgImg.renderedPixel = w > h ? w : h;\r\n            //drawImage를 활용 해상도를 기준 크기까지 줄임\r\n            tmpCanvasRef.current.width = numOfColPixel;\r\n            tmpCanvasRef.current.height = numOfRowPixel;\r\n            let tmpctx = tmpCanvasRef.current.getContext('2d');\r\n            tmpctx.drawImage(bgImgRef.current, bgImg.zeroX, bgImg.zeroY, bgImg.renderedW, bgImg.renderedH,\r\n                0, 0, numOfColPixel, numOfRowPixel);\r\n\r\n            originCanvas.vars.base = base;\r\n            originCanvas.vars.numOfColPixel = numOfColPixel;\r\n            originCanvas.vars.numOfRowPixel = numOfRowPixel;\r\n            originCanvas.canvas.width = numOfColPixel * MosaicSize;\r\n            originCanvas.canvas.height = numOfRowPixel * MosaicSize;\r\n        },\r\n        render: () => {\r\n            let vars = originCanvas.vars;\r\n            //돌면서 색상 채우고, 색상정보를 저장함\r\n            let tmpctx = tmpCanvasRef.current.getContext('2d');\r\n            let imageData = tmpctx.getImageData(0, 0, vars.numOfColPixel, vars.numOfRowPixel).data;\r\n            for (let i = 0; i < vars.numOfRowPixel; i++) {\r\n                for (let j = 0; j < vars.numOfColPixel; j++) {\r\n                    let y = i * MosaicSize;\r\n                    let x = j * MosaicSize;\r\n                    let curPixel = 4 * (i * vars.numOfColPixel + j);\r\n                    let lightness = parseInt((3 * imageData[curPixel] + 4 * imageData[curPixel + 1] + imageData[curPixel + 2]) >>> 3);\r\n                    //lightness = Math.max(0, lightness - 10);\r\n                    originCanvas.context.fillStyle = 'rgb(' + lightness + \",\" + lightness + ',' + lightness + ')';\r\n                    originCanvas.context.fillRect(x, y, MosaicSize, MosaicSize);\r\n                    vars.pos_lightness[lightness].push([j, i]);\r\n                }\r\n            }\r\n            //원본 모자이크 myc에 그리기 시작\r\n            myc.canAnimRun = true;\r\n            myc.canRender = true;\r\n            tmpCanvasRef.current.width = MosaicSize * 2;\r\n            tmpCanvasRef.current.height = MosaicSize * 2;\r\n            for (let i = 0; i < 255; i++) {\r\n                vars.pos_lightness[i] = shuffle(vars.pos_lightness[i]);\r\n            }\r\n            const onloadhandler = (e) => {\r\n                tmpctx.drawImage(e.target, 0, 0, MosaicSize * 2, MosaicSize * 2);\r\n                let imgDatas = [];\r\n                let idx = e.target.idx;\r\n                for (let i = 0; i < 4; i++) {\r\n                    let x = (i % 2 * MosaicSize);\r\n                    let y = Math.floor(i / 2) * MosaicSize;\r\n                    imgDatas.push(tmpctx.getImageData(x, y, MosaicSize, MosaicSize));\r\n                }\r\n\r\n                const greyScaleMaker = new Worker(GreyScaleMaker);\r\n                greyScaleMaker.onmessage = (e) => {\r\n                    let lightness = e.data.lightness;\r\n                    let imgidx = e.data.imgidx;\r\n                    let imageData = e.data.imageData;\r\n                    originCanvas.vars.imgs_lightness[lightness].push([imageData, imgidx]);\r\n\r\n                    //같은 밝기를 가진 모자이크조각에다 넣음\r\n                    let posArr = originCanvas.vars.pos_lightness[lightness];\r\n                    let curidx = 0;\r\n                    let last = posArr.length - 1;\r\n                    while (curidx <= last) {\r\n                        let pos = posArr[curidx];\r\n                        let mosaicInfo = originCanvas.vars.mosaicInfo;\r\n                        let cur = mosaicInfo[pos[1]][pos[0]];\r\n\r\n                        //이미지를 채울 때 주변에 이미 있다면 넘어감   \r\n                        if (cur.bannedList.has(imgidx)) {\r\n                            curidx++;\r\n                            continue;\r\n                        }\r\n                        cur.imageIdx = imgidx;\r\n                        //채울 때 주변에 이 사진은 쓰지 말라고 표시함\r\n                        for (let i = -2; i <= 2; i++) {\r\n                            for (let j = -2; j <= 2; j++) {\r\n                                let x = pos[0] + i, y = pos[1] + j;\r\n                                if (mosaicInfo[y] && mosaicInfo[y][x]) {\r\n                                    mosaicInfo[y][x].bannedList.add(cur.imageIdx);\r\n                                }\r\n                            }\r\n                        }\r\n                        originCanvas.context.putImageData(imageData, pos[0] * MosaicSize, pos[1] * MosaicSize);\r\n\r\n                        //채워진 모자이크는 지운다.\r\n                        posArr[curidx] = posArr[last];\r\n                        curidx++;\r\n                        last--;\r\n                        posArr.pop();\r\n                    }\r\n                    ++originCanvas.vars.imgLoadCounter;\r\n                    if (originCanvas.vars.imgLoadCounter >= originCanvas.consts.usingImageSize * 4) {\r\n                        originCanvas.consts.drawRemain();\r\n                    }\r\n                }\r\n                for (let i = 0; i < 4; i++) {\r\n                    greyScaleMaker.postMessage({ imagedata: imgDatas[i], imgidx: idx + i / 10 });\r\n                }\r\n            };\r\n            const onerrorhandler = () => {\r\n                originCanvas.vars.imgLoadCounter += 4;\r\n                if (originCanvas.vars.imgLoadCounter >= originCanvas.consts.usingImageSize * 4) {\r\n                    originCanvas.consts.drawRemain();\r\n                }\r\n            }\r\n            for (let idx = 0; idx < images.length && idx < originCanvas.consts.usingImageSize; idx++) {\r\n                let tmpimg = new Image();\r\n                tmpimg.crossOrigin = \"Anonymous\";\r\n                tmpimg.idx = idx;\r\n                //tmpimg.addEventListener(\"load\", onloadhandler, { once: true });\r\n                tmpimg.onload = onloadhandler;\r\n                tmpimg.onerror = onerrorhandler;\r\n                tmpimg.src = images[idx].thumbnailUrl + \"&w=100&h=100&c=7\";\r\n                images[idx].tmpimg = tmpimg;\r\n            }\r\n            //정보 보여주는 팝업창을 띄우기\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        canvasRef.current.addEventListener('wheel', preventDefault);\r\n        canvasRef.current.addEventListener('touchmove', preventDefault);\r\n        return () => {\r\n            originCanvas.delete();\r\n            myc.delete();\r\n        }\r\n    }, []);\r\n\r\n    const onWheelhandler = (e) => {\r\n        let x = e.pageX - canvasRef.current.offsetLeft;\r\n        let y = e.pageY - canvasRef.current.offsetTop;\r\n        if (e.deltaY > 0) {\r\n            myc.consts.zoom(x, y, -0.1);\r\n        } else if (e.deltaY < 0) {\r\n            myc.consts.zoom(x, y, 0.1);\r\n        }\r\n    }\r\n\r\n    let isMoved = false;\r\n    let prev = [];\r\n    let downpos = [];\r\n    const onmove = (e) => {\r\n        let x, y;\r\n        if (e.touches) {\r\n            props.hide();\r\n            if (prev.length >= 2) {\r\n                let dx = prev[0].pageX - prev[1].pageX;\r\n                let dy = prev[0].pageY - prev[1].pageY;\r\n                let midx = (prev[0].pageX + prev[1].pageX) / 2 - canvasRef.current.offsetLeft;\r\n                let midy = (prev[0].pageY + prev[1].pageY) / 2 - canvasRef.current.offsetTop;\r\n                let prevDiff = Math.sqrt(dx * dx + dy * dy);\r\n                for (let i = 0; i < e.changedTouches.length; i++) {\r\n                    if (prev[0].identifier === e.changedTouches[i].identifier) {\r\n                        prev[0] = e.changedTouches[i];\r\n                    } else {\r\n                        prev[1] = e.changedTouches[i];\r\n                    }\r\n                }\r\n                dx = prev[0].pageX - prev[1].pageX;\r\n                dy = prev[0].pageY - prev[1].pageY;\r\n                let curDiff = Math.sqrt(dx * dx + dy * dy);\r\n                let diff = curDiff - prevDiff;\r\n                if (prevDiff) {\r\n                    myc.consts.zoom(midx, midy, diff / canvasRef.current.clientWidth)\r\n                }\r\n                return;\r\n            } else {\r\n                x = e.touches[0].pageX;\r\n                y = e.touches[0].pageY;\r\n                e.movementX = x - prev[0].pageX\r\n                e.movementY = y - prev[0].pageY;\r\n                prev[0] = e.touches[0];\r\n            }\r\n        } else {\r\n            x = e.pageX - canvasRef.current.offsetLeft;\r\n            y = e.pageY - canvasRef.current.offsetTop;\r\n        }\r\n        myc.consts.emp(x, y);\r\n        myc.consts.move(e.movementX, e.movementY);\r\n    }\r\n\r\n    const onClickhandler = (e) => {\r\n        if (isMoved) return;\r\n        let x = e.pageX - canvasRef.current.offsetLeft;\r\n        let y = e.pageY - canvasRef.current.offsetTop;\r\n        myc.consts.click(x, y);\r\n    }\r\n    const ondown = (e) => {\r\n        if (e.touches) {\r\n            if (prev.length > 2) return;\r\n\r\n            prev.push(e.touches[0]);\r\n        } else {\r\n            downpos = [e.clientX, e.clientY];\r\n        }\r\n        myc.vars.canMove = true;\r\n    }\r\n    const onup = (e) => {\r\n        if (e.touches) {\r\n            prev = [];\r\n            /*\r\n            for (var i = 0; i < prev.length; i++) {\r\n                if (prev[i].identifier == e.changedTouches[0].identifier) {\r\n                    prev.splice(i, 1);\r\n                    break;\r\n                }\r\n            }     */\r\n        } else {\r\n            let d = e.clientX - downpos[0];\r\n            d += e.clientY - downpos[1];\r\n            isMoved = !!d;\r\n        }\r\n        myc.vars.canMove = false;\r\n    }\r\n    const mouseLeave = (e) => {\r\n        myc.vars.canMove = false;\r\n    }\r\n    const onImageLoaded = (e) => {\r\n        props.setImageLoaded(true);\r\n        myc.canRender = false;\r\n        myc.canAnimRun = false;\r\n        originCanvas.renderPicture(originCanvasRef.current);\r\n        myc.animStart(canvasRef.current);\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <img\r\n                className={styles.dispNone}\r\n                ref={bgImgRef}\r\n                onLoad={onImageLoaded}\r\n                alt=\"\"\r\n            ></img>\r\n            <canvas className={styles.width100} ref={canvasRef} width={canvasSize} height={canvasSize}\r\n                onClick={onClickhandler}\r\n                onWheel={onWheelhandler}\r\n                onMouseMove={onmove}\r\n                onMouseDown={ondown}\r\n                onMouseUp={onup}\r\n                onMouseLeave={mouseLeave}\r\n                onTouchStart={ondown}\r\n                onTouchMove={onmove}\r\n                onTouchEnd={onup}\r\n            >\r\n                이 브라우저는 캔버스를 지원하지 않습니다.\r\n            </canvas>\r\n            <canvas className={styles.dispNone} ref={tmpCanvasRef} width=\"100\" height=\"100\">\r\n            </canvas>\r\n            <canvas className={styles.dispNone} ref={originCanvasRef} width=\"100\" height=\"100\">\r\n            </canvas>\r\n        </>\r\n\r\n    );\r\n});\r\n\r\nexport default Mosaic;","import React, { useEffect, useRef } from 'react';\r\nimport styles from './PopUp.module.css';\r\nfunction PopUp(props) {\r\n    let abs;\r\n    if (props.imageInfo !== null) {\r\n        abs = {\r\n            position: 'absolute',\r\n            left: `${props.imageInfo.popUpPos[0]}px`,\r\n            top: `${props.imageInfo.popUpPos[1]}px`,\r\n            width: `${props.imageInfo.popUpSize}px`,\r\n            height: `${props.imageInfo.popUpSize}px`,\r\n        };\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.imageInfo &&\r\n                <div className={styles.popUpContainer} style={abs} onMouseLeave={props.hide}>\r\n                    <a\r\n                        href={props.imageInfo.webSearchUrl}\r\n                        target='_blank'\r\n                        rel=\"noreferrer\"\r\n                        title={props.imageInfo.name}\r\n                    >\r\n                        <div className={styles.popUpContainer}>{props.imageInfo.name}</div>\r\n                        <img\r\n                            className={styles.thumbnailImg}\r\n                            src={props.imageInfo.thumbnailUrl + `&w=${props.imageInfo.popUpSize}&h=${props.imageInfo.popUpSize - 50}&c=7&p=0`}\r\n                            alt={props.imageInfo.name}\r\n                        />\r\n                    </a>\r\n\r\n\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PopUp;","\r\nimport styles from './Spinner.module.css';\r\nimport PropTypes from 'prop-types';\r\nfunction Spinner(props) {\r\n    return (\r\n        <div className={styles.spinnerWrapper + (props.isDarkMode ? ` ${styles[\"spinnerWrapper--darkmode\"]}` : \"\")}>\r\n            <div className={styles.spinner}></div>\r\n            <div>불러오는 중...</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// props의 초깃값을 정의합니다.\r\nSpinner.defaultProps = {\r\n    isDarkMode: false,\r\n};\r\n\r\nSpinner.propTypes = {\r\n    isDarkMode: PropTypes.bool,\r\n};\r\nexport default Spinner;","import React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, NavLink, Link, Switch } from \"react-router-dom\";\r\nimport styles from './index.module.css';\r\nimport Mosaic from './Mosaic'\r\nimport PopUp from './PopUp'\r\nimport Spinner from './Spinner';\r\n\r\nclass Main extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { popUpInfo: null, todaySong: \"\", imageLoaded: false };\r\n\t\tthis.popUp = this.popUp.bind(this);\r\n\t\tthis.hide = this.hide.bind(this);\r\n\t\tthis.setTodaySong = this.setTodaySong.bind(this);\r\n\t\tthis.setImageLoaded = this.setImageLoaded.bind(this);\r\n\t}\r\n\tpopUp(popUpInfo) {\r\n\t\tif (popUpInfo === null) {\r\n\t\t\tthis.hide();\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tpopUpInfo: popUpInfo\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\thide() {\r\n\t\tthis.setState({\r\n\t\t\tpopUpInfo: null\r\n\t\t});\r\n\t}\r\n\r\n\tsetTodaySong(msg) {\r\n\t\tthis.setState({\r\n\t\t\ttodaySong: msg\r\n\t\t});\r\n\t}\r\n\tsetImageLoaded(msg) {\r\n\t\tthis.setState({\r\n\t\t\timageLoaded: msg\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<header>\r\n\r\n\t\t\t\t</header>\r\n\t\t\t\t<div className={styles.container}>\r\n\t\t\t\t\t<main>\r\n\t\t\t\t\t\t<div className={styles.photoinfo}>\r\n\t\t\t\t\t\t\t<span className={styles.noti + \" material-icons-outlined\"}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<a href=\"https://www.melon.com/chart/day/index.htm\" target='_blank' rel=\"noreferrer\">\r\n\t\t\t\t\t\t\t\t\t\t멜론 일간 차트\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t, 1위\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<h1>{this.state.todaySong}</h1>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.photomosaic}>\r\n\t\t\t\t\t\t\t{!this.state.imageLoaded && <Spinner />}\r\n\t\t\t\t\t\t\t<Mosaic popUp={this.popUp} hide={this.hide} setTodaySong={this.setTodaySong} setImageLoaded={this.setImageLoaded} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t\t<PopUp imageInfo={this.state.popUpInfo} hide={this.hide}></PopUp>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass App extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path='/99-interactions' component={Main} />\r\n\t\t\t\t\t\t<Route path='*'>\r\n\t\t\t\t\t\t\t없음\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}